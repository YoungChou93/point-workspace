<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.his.dao.outdoctor.DrugRoomBackDao" >
  <resultMap id="BaseResultMap" type="com.his.entity.outdoctor.DrugRoomBack" >
    <id column="BackID" property="backid" jdbcType="CHAR" />
    <result column="BackDos" property="backdos" jdbcType="DECIMAL" />
    <result column="RetailUnit" property="retailunit" jdbcType="VARCHAR" />
    <result column="BackPrice" property="backprice" jdbcType="DECIMAL" />
    <result column="BackMoney" property="backmoney" jdbcType="DECIMAL" />
    <result column="ExecuteDate" property="executedate" jdbcType="TIMESTAMP" />
    
    <association column="StoreID" property="drugroomstore"
		select="com.his.dao.drugroom.DrugRoomStoreDao.selectByPrimaryKey" />
	<association column="SourceDept" property="sourcedepartment"
		select="com.his.dao.baseinfo.DepartmentDao.selectPartByPrimaryKey" />
	<association column="DrugRoomID" property="drugroom"
		select="com.his.dao.baseinfo.DepartmentDao.selectPartByPrimaryKey" />
	<association column="ApplyID" property="apply"
		select="com.his.dao.outdoctor.MedicineReturnApplyDao.selectByPrimaryKey" />
	<association column="ExecuteEmpID" property="executeemployee"
		select="com.his.dao.baseinfo.EmployeeDao.selectPartByPrimaryKey" />
	<association column="BillCode" property="billcode"
		select="com.his.dao.drugrepo.BillRecDao.selectByPrimaryKey" />
  </resultMap>
  <sql id="Base_Column_List" >
    BackID, StoreID, BackDos, RetailUnit, BackPrice, BackMoney, SourceDept, DrugRoomID, ApplyID, ExecuteEmpID, ExecuteDate, BillCode
  </sql>
  
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from DrugRoomBack
    where BackID = #{backid,jdbcType=CHAR}
  </select>
  
  <select id="selectByMap" parameterType="Map" resultMap="BaseResultMap">
		select * from DrugRoomBack
		<where>
			<if test="backid !=null and backid !=''">
				and BackID = #{backid}
			</if>
		</where>
   </select>
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from DrugRoomBack
    where BackID = #{backid,jdbcType=CHAR}
  </delete>
  
  <delete id="deleteByMap" parameterType="Map">
		delete from DrugRoomBack
		<where>
			<if test="backid !=null and backid !=''">
				and BackID = #{backid}
			</if>
		</where>
  </delete>
  
  <insert id="insertSelective" parameterType="com.his.entity.outdoctor.DrugRoomBack" >
    insert into DrugRoomBack
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="backid != null" >
        BackID,
      </if>
      <if test="drugroomstore != null" >
        StoreID,
      </if>
      <if test="backdos != null" >
        BackDos,
      </if>
      <if test="retailunit != null" >
        RetailUnit,
      </if>
      <if test="backprice != null" >
        BackPrice,
      </if>
      <if test="backmoney != null" >
        BackMoney,
      </if>
      <if test="sourcedepartment != null" >
        SourceDept,
      </if>
      <if test="drugroom != null" >
        DrugRoomID,
      </if>
      <if test="apply != null" >
        ApplyID,
      </if>
      <if test="executeemployee != null" >
        ExecuteEmpID,
      </if>
      <if test="executedate != null" >
        ExecuteDate,
      </if>
      <if test="billcode != null" >
        BillCode,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="backid != null" >
        #{backid,jdbcType=CHAR},
      </if>
      <if test="drugroomstore != null" >
        #{drugroomstore.storeid,jdbcType=CHAR},
      </if>
      <if test="backdos != null" >
        #{backdos,jdbcType=DECIMAL},
      </if>
      <if test="retailunit != null" >
        #{retailunit,jdbcType=VARCHAR},
      </if>
      <if test="backprice != null" >
        #{backprice,jdbcType=DECIMAL},
      </if>
      <if test="backmoney != null" >
        #{backmoney,jdbcType=DECIMAL},
      </if>
      <if test="sourcedepartment != null" >
        #{sourcedepartment.deptid,jdbcType=CHAR},
      </if>
      <if test="drugroom != null" >
        #{drugroom.deptid,jdbcType=CHAR},
      </if>
      <if test="apply != null" >
        #{apply.applyid,jdbcType=CHAR},
      </if>
      <if test="executeemployee != null" >
        #{executeemployee.empid,jdbcType=CHAR},
      </if>
      <if test="executedate != null" >
        #{executedate,jdbcType=TIMESTAMP},
      </if>
      <if test="billcode != null" >
        #{billcode.billrecid,jdbcType=CHAR},
      </if>
    </trim>
  </insert>
  
  <update id="updateByPrimaryKeySelective" parameterType="com.his.entity.outdoctor.DrugRoomBack" >
    update DrugRoomBack
    <set >
      <if test="drugroomstore != null" >
        StoreID = #{drugroomstore.storeid,jdbcType=CHAR},
      </if>
      <if test="backdos != null" >
        BackDos = #{backdos,jdbcType=DECIMAL},
      </if>
      <if test="retailunit != null" >
        RetailUnit = #{retailunit,jdbcType=VARCHAR},
      </if>
      <if test="backprice != null" >
        BackPrice = #{backprice,jdbcType=DECIMAL},
      </if>
      <if test="backmoney != null" >
        BackMoney = #{backmoney,jdbcType=DECIMAL},
      </if>
      <if test="sourcedepartment != null" >
        SourceDept = #{sourcedepartment.deptid,jdbcType=CHAR},
      </if>
      <if test="drugroom != null" >
        DrugRoomID = #{drugroom.deptid,jdbcType=CHAR},
      </if>
      <if test="apply != null" >
        ApplyID = #{apply.applyid,jdbcType=CHAR},
      </if>
      <if test="executeemployee != null" >
        ExecuteEmpID = #{executeemployee.empid,jdbcType=CHAR},
      </if>
      <if test="executedate != null" >
        ExecuteDate = #{executedate,jdbcType=TIMESTAMP},
      </if>
      <if test="billcode != null" >
        BillCode = #{billcode.billrecid,jdbcType=CHAR},
      </if>
    </set>
    where BackID = #{backid,jdbcType=CHAR}
  </update>
  
  <select id="findDrugRoomBack" parameterType="Map" resultMap="BaseResultMap">
		select * from DrugRoomBack
		<where>
			<if test="backid !=null and backid !=''">
				and BackID = #{backid}
			</if>
			<if test="deptid !=null and deptid !=''">
				and DrugRoomID = #{deptid}
			</if>
			<if test="empid !=null and empid !=''">
				and ExecuteEmpID = #{empid}
			</if>
		</where>
		<if test="start!=null and size!=null">
			order by BackID offset ${start} rows fetch next ${size} rows only
		</if>
	</select>

	<select id="getTotalDrugRoomBack" parameterType="Map"
		resultType="Long">
		select count(*) from DrugRoomBack
		<where>
			<if test="backid !=null and backid !=''">
				and BackID = #{backid}
			</if>
			<if test="deptid !=null and deptid !=''">
				and DrugRoomID = #{deptid}
			</if>
			<if test="empid !=null and empid !=''">
				and ExecuteEmpID = #{empid}
			</if>
		</where>
	</select>
	
	<select id="getMaxID" parameterType="Map" resultType="String" >
	select MAX(BackID) from DrugRoomBack
	<where>
	     <!-- 日期    -->
	     <if test="prefix!=null and prefix!='' ">
	     and BackID like #{prefix}
	     </if>
	</where>
	</select>
</mapper>