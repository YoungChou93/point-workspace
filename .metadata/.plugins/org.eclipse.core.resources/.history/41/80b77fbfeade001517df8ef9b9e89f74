<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.his.dao.outdoctor.ServiceItemAdviceDao">
	<resultMap id="BaseResultMap" type="com.his.entity.outdoctor.ServiceItemAdvice">
		<id column="SerialID" property="serialid" jdbcType="CHAR" />
		<result column="PrescriptionID" property="prescriptionid"
			jdbcType="CHAR" />
		<result column="AdviceID" property="adviceid" jdbcType="CHAR" />
		<result column="AdviceType" property="advicetype" jdbcType="INTEGER" />
		<result column="AdviceState" property="advicestate" jdbcType="INTEGER" />
		<result column="SumNum" property="sumnum" jdbcType="DECIMAL" />
		<result column="OtherMemo" property="othermemo" jdbcType="NVARCHAR" />
		<result column="CheckApplyID" property="checkapplyid" jdbcType="CHAR" />
		<result column="TestApplyID" property="testapplyid" jdbcType="CHAR" />
		<result column="SurgeryApplyID" property="surgeryapplyid" jdbcType="CHAR" />
		<result column="UnUsed1" property="unused1" jdbcType="NVARCHAR" />
		<result column="UnUsed2" property="unused2" jdbcType="NVARCHAR" />

		<association column="ServiceItemID" property="serviceitem"
			select="com.his.dao.baseinfo.ServiceItemDao.selectByPrimaryKey" />
		<association column="ExeDeptID" property="exedept"
			select="com.his.dao.baseinfo.DepartmentDao.selectPartByPrimaryKey" />
	</resultMap>

	<sql id="Base_Column_List">
		SerialID, PrescriptionID, AdviceID, AdviceType,
		ServiceItemID, ExeDeptID,
		AdviceState,
		SumNum,
		OtherMemo, CheckApplyID, TestApplyID, SurgeryApplyID, UnUsed1, UnUsed2
	</sql>

	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.String">
		select
		<include refid="Base_Column_List" />
		from ServiceItemAdvice
		where SerialID = #{serialid,jdbcType=CHAR}
	</select>

	<select id="selectByMap" parameterType="Map" resultMap="BaseResultMap">
		select * from ServiceItemAdvice
		<where>
			<if test="serialid !=null and serialid !=''">
				and SerialID=#{serialid}
			</if>
			<if test="checkapplyid !=null and checkapplyid !=''">
				and CheckApplyID=#{checkapplyid}
			</if>
			<if test="testapplyid !=null and testapplyid !=''">
				and TestApplyID=#{testapplyid}
			</if>
			<if test="surgeryapplyid !=null and surgeryapplyid !=''">
				and SurgeryApplyID=#{surgeryapplyid}
			</if>
		</where>
	</select>

	<delete id="deleteByPrimaryKey" parameterType="java.lang.String">
		delete from
		ServiceItemAdvice
		where SerialID = #{serialid,jdbcType=CHAR}
	</delete>

	<delete id="deleteByMap" parameterType="Map">
		delete from ServiceItemAdvice
		<where>
			<if test="serialid !=null and serialid !=''">
				and SerialID=#{serialid}
			</if>
			<if test="serviceitemid !=null and serviceitemid !=''">
				and ServiceItemID=#{serviceitemid}
			</if>
			<if test="prescriptionid !=null and prescriptionid !=''">
				and PrescriptionID=#{prescriptionid}
			</if>
			<if test="adviceid !=null and adviceid !=''">
				and AdviceID=#{adviceid}
			</if>
		</where>
	</delete>

	<insert id="insertSelective" parameterType="com.his.entity.outdoctor.ServiceItemAdvice">
		insert into ServiceItemAdvice
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="serialid != null">
				SerialID,
			</if>
			<if test="prescriptionid != null">
				PrescriptionID,
			</if>
			<if test="adviceid != null">
				AdviceID,
			</if>
			<if test="advicetype != null">
				AdviceType,
			</if>
			<if test="serviceitem != null">
				ServiceItemID,
			</if>
			<if test="exedept != null">
				ExeDeptID,
			</if>
			<if test="advicestate != null">
				AdviceState,
			</if>
			<if test="sumnum != null">
				SumNum,
			</if>
			<if test="othermemo != null">
				OtherMemo,
			</if>
			<if test="checkapplyid != null">
				CheckApplyID,
			</if>
			<if test="testapplyid != null">
				TestApplyID,
			</if>
			<if test="surgeryapplyid != null">
				SurgeryApplyID,
			</if>
			<if test="unused1 != null">
				UnUsed1,
			</if>
			<if test="unused2 != null">
				UnUsed2,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="serialid != null">
				#{serialid,jdbcType=CHAR},
			</if>
			<if test="prescriptionid != null">
				#{prescriptionid,jdbcType=CHAR},
			</if>
			<if test="adviceid != null">
				#{adviceid,jdbcType=CHAR},
			</if>
			<if test="advicetype != null">
				#{advicetype,jdbcType=INTEGER},
			</if>
			<if test="serviceitem != null">
				#{serviceitem.serviceitemid,jdbcType=CHAR},
			</if>
			<if test="exedept != null">
				#{exedept.deptid,jdbcType=CHAR},
			</if>
			<if test="advicestate != null">
				#{advicestate,jdbcType=INTEGER},
			</if>
			<if test="sumnum != null">
				#{sumnum,jdbcType=DECIMAL},
			</if>
			<if test="othermemo != null">
				#{othermemo,jdbcType=NVARCHAR},
			</if>
			<if test="checkapplyid != null">
				#{checkapplyid,jdbcType=CHAR},
			</if>
			<if test="testapplyid != null">
				#{testapplyid,jdbcType=CHAR},
			</if>
			<if test="surgeryapplyid != null">
				#{surgeryapplyid,jdbcType=CHAR},
			</if>
			<if test="unused1 != null">
				#{unused1,jdbcType=NVARCHAR},
			</if>
			<if test="unused2 != null">
				#{unused2,jdbcType=NVARCHAR},
			</if>
		</trim>
	</insert>

	<update id="updateByPrimaryKeySelective" parameterType="com.his.entity.outdoctor.ServiceItemAdvice">
		update ServiceItemAdvice
		<set>
			<if test="prescriptionid != null">
				PrescriptionID =
				#{prescriptionid,jdbcType=CHAR},
			</if>
			<if test="adviceid != null">
				AdviceID = #{adviceid,jdbcType=CHAR},
			</if>
			<if test="advicetype != null">
				AdviceType = #{advicetype,jdbcType=INTEGER},
			</if>
			<if test="serviceitem != null">
				ServiceItemID =
				#{serviceitem.serviceitemid,jdbcType=CHAR},
			</if>
			<if test="exedept != null">
				ExeDeptID = #{exedept.deptid,jdbcType=CHAR},
			</if>
			<if test="advicestate != null">
				AdviceState = #{advicestate,jdbcType=INTEGER},
			</if>
			<if test="sumnum != null">
				SumNum = #{sumnum,jdbcType=DECIMAL},
			</if>
			<if test="othermemo != null">
				OtherMemo = #{othermemo,jdbcType=NVARCHAR},
			</if>
			<if test="checkapplyid != null">
				CheckApplyID = #{checkapplyid,jdbcType=CHAR},
			</if>
			<if test="testapplyid != null">
				TestApplyID = #{testapplyid,jdbcType=CHAR},
			</if>
			<if test="surgeryapplyid != null">
				SurgeryApplyID = #{surgeryapplyid,jdbcType=CHAR},
			</if>
			<if test="unused1 != null">
				UnUsed1 = #{unused1,jdbcType=NVARCHAR},
			</if>
			<if test="unused2 != null">
				UnUsed2 = #{unused2,jdbcType=NVARCHAR},
			</if>
		</set>
		where SerialID = #{serialid,jdbcType=CHAR}
	</update>

	<select id="findServiceItemAdvice" parameterType="Map"
		resultMap="BaseResultMap">
		select * from ServiceItemAdvice
		<where>
			<if test="serialid !=null and serialid !=''">
				and SerialID=#{serialid}
			</if>
			<if test="serviceitemid !=null and serviceitemid !=''">
				and ServiceItemID=#{serviceitemid}
			</if>
			<if test="prescriptionid !=null and prescriptionid !=''">
				and PrescriptionID=#{prescriptionid}
			</if>
			<if test="adviceid !=null and adviceid !=''">
				and AdviceID=#{adviceid}
			</if>
			<if test="advicestate !=null">
				and AdviceState = ${advicestate}
			</if>
			<if test="iccardid !=null and iccardid !=''">
				and PrescriptionID in (select PrescriptionID from Prescription where ICCardID=#{iccardid} )
			</if>
		</where>
		<if test="start!=null and size!=null">
			order by InputID DESC offset ${start} rows fetch next
			${size} rows only
		</if>
	</select>

	<select id="getTotalServiceItemAdvice" parameterType="Map"
		resultType="Long">
		select count(*) from ServiceItemAdvice
		<where>
			<if test="serialid !=null and serialid !=''">
				and SerialID=#{serialid}
			</if>
			<if test="serviceitemid !=null and serviceitemid !=''">
				and ServiceItemID=#{serviceitemid}
			</if>
			<if test="prescriptionid !=null and prescriptionid !=''">
				and PrescriptionID=#{prescriptionid}
			</if>
			<if test="adviceid !=null and adviceid !=''">
				and AdviceID=#{adviceid}
			</if>
		</where>
	</select>

	<select id="getSerialID" parameterType="Map" resultType="String">
		select MAX(SerialID) from ServiceItemAdvice
		<where>
			<if test="prefix !=null and prefix !=''">
				and SerialID like #{prefix}
			</if>
		</where>
	</select>

	<select id="getAdviceID" parameterType="Map" resultType="String">
		select MAX(AdviceID) from ServiceItemAdvice
		<where>
			<if test="prescriptionid !=null and prescriptionid !=''">
				and AdviceID like #{prescriptionid}
			</if>
		</where>
	</select>
	
	<select id="findAdviceIDByPrescripiton" resultType="String" parameterType="java.lang.String">
		select AdviceID from ServiceItemAdvice
		where PrescriptionID = #{presid,jdbcType=CHAR}
	</select>
</mapper>