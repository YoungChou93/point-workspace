<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.his.dao.baseinfo.SickAreaDao" >
  <resultMap id="BaseResultMap" type="com.his.entity.baseinfo.SickArea" >
    <id column="AreaID" property="areaid" jdbcType="VARCHAR" />
    <result column="AreaName" property="areaname" jdbcType="NVARCHAR" />
    <result column="UnUsed1" property="unused1" jdbcType="NVARCHAR" />
    <result column="UnUsed2" property="unused2" jdbcType="NVARCHAR" />
    <association property="department" column="DeptID"
			select="com.his.dao.baseinfo.DepartmentDao.selectPartByPrimaryKey"></association>
  </resultMap>
  
  <sql id="Base_Column_List" >
    AreaID, DeptID, AreaName, UnUsed1, UnUsed2
  </sql>
  
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from SickArea
    where AreaID = #{areaid,jdbcType=VARCHAR}
  </select>
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from SickArea
    where AreaID = #{areaid,jdbcType=VARCHAR}
  </delete>
  
  <insert id="insert" parameterType="com.his.entity.baseinfo.SickArea" >
    insert into SickArea (AreaID, DeptID, AreaName, 
      UnUsed1, UnUsed2)
    values (#{areaid,jdbcType=VARCHAR}, #{department.deptid,jdbcType=CHAR}, #{areaname,jdbcType=NVARCHAR}, 
      #{unused1,jdbcType=NVARCHAR}, #{unused2,jdbcType=NVARCHAR})
  </insert>
  
  <insert id="insertSelective" parameterType="com.his.entity.baseinfo.SickArea" >
    insert into SickArea
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="areaid != null" >
        AreaID,
      </if>
      <if test="department != null" >
        DeptID,
      </if>
      <if test="areaname != null" >
        AreaName,
      </if>
      <if test="unused1 != null" >
        UnUsed1,
      </if>
      <if test="unused2 != null" >
        UnUsed2,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="areaid != null" >
        #{areaid,jdbcType=VARCHAR},
      </if>
      <if test="department != null" >
        #{department.deptid,jdbcType=CHAR},
      </if>
      <if test="areaname != null" >
        #{areaname,jdbcType=NVARCHAR},
      </if>
      <if test="unused1 != null" >
        #{unused1,jdbcType=NVARCHAR},
      </if>
      <if test="unused2 != null" >
        #{unused2,jdbcType=NVARCHAR},
      </if>
    </trim>
  </insert>
  
  <update id="updateByPrimaryKeySelective" parameterType="com.his.entity.baseinfo.SickArea" >
    update SickArea
    <set >
      <if test="department != null" >
        DeptID = #{department.deptid,jdbcType=CHAR},
      </if>
      <if test="areaname != null" >
        AreaName = #{areaname,jdbcType=NVARCHAR},
      </if>
      <if test="unused1 != null" >
        UnUsed1 = #{unused1,jdbcType=NVARCHAR},
      </if>
      <if test="unused2 != null" >
        UnUsed2 = #{unused2,jdbcType=NVARCHAR},
      </if>
    </set>
    where AreaID = #{areaid,jdbcType=VARCHAR}
  </update>
  
  <update id="updateByPrimaryKey" parameterType="com.his.entity.baseinfo.SickArea" >
    update SickArea
    set DeptID = #{department.deptid,jdbcType=CHAR},
      AreaName = #{areaname,jdbcType=NVARCHAR},
      UnUsed1 = #{unused1,jdbcType=NVARCHAR},
      UnUsed2 = #{unused2,jdbcType=NVARCHAR}
    where AreaID = #{areaid,jdbcType=VARCHAR}
  </update>
  
  	<select id="findSickArea" parameterType="Map" resultMap="BaseResultMap">
		select * from SickArea
		<where>
			<!-- 按病区名称搜索 -->
			<if test="areaname!=null and areaname!='' ">
				and AreaName like #{areaname}
			</if>
		</where>
		<if test="start!=null and size!=null">
			order by AreaID offset ${start} rows fetch next ${size} rows only
		</if>
	</select>
	
	<select id="getTotalSickArea" parameterType="Map" resultType="Long">
		select count(*) from SickArea
		<where>
			<!-- 按病区名称搜索 -->
			<if test="areaname!=null and areaname!='' ">
				and AreaName like #{areaname}
			</if>
		</where>
	</select>
	
	<select id="loadSickAreaByDeptID" parameterType="Map" resultMap="BaseResultMap">
		select * from SickArea
		<where>
			<!-- 加载某部门下的所有病区 -->
			<if test="deptid!=null and deptid!='' ">
				and DeptID like #{deptid}
			</if>
		</where>
	</select>
	
	<select id="getMaxSickAreaID" parameterType="Map"
		resultType="String">
		select MAX(AreaID) from SickArea
			<where>
			<!-- 依照前缀搜索 -->
			<if test="deptid!=null and deptid!=''">
				and AreaID like #{deptid}
			</if>
		</where>
	</select>
	
</mapper>