<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.his.dao.baseinfo.RoleDao">
	<resultMap id="BaseResultMap" type="com.his.entity.baseinfo.Role">
		<id column="RoleID" property="roleid" jdbcType="VARCHAR" />
		<result column="RoleName" property="rolename" jdbcType="NVARCHAR" />
		<result column="IsActive" property="isactive" jdbcType="BIT" />
		<result column="UnUsed1" property="unused1" jdbcType="NVARCHAR" />
		<result column="UnUsed2" property="unused2" jdbcType="NVARCHAR" />
		
		<association column="DeptID" property="department"
			select="com.his.dao.baseinfo.DepartmentDao.selectPartByPrimaryKey"></association>
	</resultMap>

	<sql id="Base_Column_List">
		RoleID, RoleName, DeptID, IsActive, UnUsed1, UnUsed2
	</sql>

	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.String">
		select
		<include refid="Base_Column_List" />
		from Role
		where RoleID = #{roleid,jdbcType=VARCHAR}
	</select>

	<delete id="deleteByPrimaryKey" parameterType="java.lang.String">
		delete from Role
		where RoleID = #{roleid,jdbcType=VARCHAR}
	</delete>

	<insert id="insert" parameterType="com.his.entity.baseinfo.Role">
		insert into Role (RoleID, RoleName, DeptID, IsActive, UnUsed1, UnUsed2
		)
		values (#{roleid,jdbcType=VARCHAR}, #{rolename,jdbcType=NVARCHAR},
		#{department.deptid,jdbcType=CHAR},
		#{isactive,jdbcType=BIT}, #{unuse1,jdbcType=NVARCHAR}, #{unuse2,jdbcType=VARCHAR}
		)
	</insert>

	<insert id="insertSelective" parameterType="com.his.entity.baseinfo.Role">
		insert into Role
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="roleid != null">
				RoleID,
			</if>
			<if test="rolename != null">
				RoleName,
			</if>
			<if test="department  != null">
				DeptID,
			</if>
			<if test="isactive != null">
				IsActive,
			</if>
			<if test="unused1 != null">
				UnUsed1,
			</if>
			<if test="unused2 != null">
				UnUsed2,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="roleid != null">
				#{roleid,jdbcType=VARCHAR},
			</if>
			<if test="rolename != null">
				#{rolename,jdbcType=NVARCHAR},
			</if>
			<if test="department != null">
				#{department.deptid,jdbcType=CHAR},
			</if>
			<if test="isactive != null">
				#{isactive,jdbcType=BIT},
			</if>
			<if test="unused1 != null">
				#{unused1,jdbcType=NVARCHAR},
			</if>
			<if test="unused2 != null">
				#{unused2,jdbcType=NVARCHAR},
			</if>
		</trim>
	</insert>

	<update id="updateByPrimaryKeySelective" parameterType="com.his.entity.baseinfo.Role">
		update Role
		<set>
			<if test="rolename != null">
				RoleName = #{rolename,jdbcType=NVARCHAR},
			</if>
			<if test="department != null">
				DeptID = #{department.deptid,jdbcType=CHAR},
			</if>
			<if test="isactive != null">
				IsActive = #{isactive,jdbcType=BIT},
			</if>
			<if test="unused1 != null">
				UnUsed1 = #{unused1,jdbcType=NVARCHAR},
			</if>
			<if test="unused2 != null">
				UnUsed2 = #{unused2,jdbcType=NVARCHAR},
			</if>
		</set>
		where RoleID = #{roleid,jdbcType=VARCHAR}
	</update>

	<update id="updateByPrimaryKey" parameterType="com.his.entity.baseinfo.Role">
		update Role
		set RoleName = #{rolename,jdbcType=NVARCHAR},
		DeptID = #{department.deptid,jdbcType=CHAR},
		IsActive = #{isactive,jdbcType=BIT},
		UnUsed1 = #{unused1,jdbcType=NVARCHAR},
		UnUsed2 = #{unused2,jdbcType=NVARCHAR}
		where RoleID = #{roleid,jdbcType=VARCHAR}
	</update>

	<select id="findRole" parameterType="Map" resultMap="BaseResultMap">
		select * from Role
		<where>
			<!-- 按部门id搜索，查找某部门下的角色信息 -->
			<if test="deptid!=null and deptid!=''">
				and DeptID like #{deptid}
			</if>
			<!-- 按角色名称搜索 -->
			<if test="filter !=null and filter !='' ">
				and RoleName like #{rolename}
			</if>
		</where>
		<if test="start!=null and size!=null">
			order by RoleID offset ${start} rows fetch next ${size}
			rows only
		</if>
	</select>


	<select id="getComboByLoginID" parameterType="Map" resultMap="BaseResultMap">
		select * from Role
		<where>
			<!-- 按登陆id搜索，查找某个人的角色信息 -->
			<if test="loginid!=null and loginid!=''">
				and RoleID in (
				select RoleID from LoginAccountRoleMap where LoginID = #{loginid}
				)
			</if>
		</where>
	</select>

	<select id="getTotalRole" parameterType="Map" resultType="Long">
		select count(*) from Role
		<where>
			<!-- 按部门id搜索，查找某部门下的角色信息 -->
			<if test="deptid!=null and deptid!=''">
				and DeptID like #{deptid}
			</if>
			<!-- 按角色名称搜索 -->
			<if test="rolename !=null and rolename !='' ">
				and RoleName like #{rolename}
			</if>
		</where>
	</select>

	<select id="generateCode" parameterType="java.lang.String"
		resultType="java.lang.String">
		select MAX(RoleID)
		from Role
		where DeptID = #{deptid,jdbcType=CHAR}
	</select>
</mapper>