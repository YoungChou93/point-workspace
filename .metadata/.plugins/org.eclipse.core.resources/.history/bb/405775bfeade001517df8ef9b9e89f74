<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.his.dao.hospital.PrepaidRecordDao">
	<resultMap id="BaseResultMap" type="com.his.entity.hospital.PrepaidRecord">
		<id column="SerialID" property="serialid" jdbcType="CHAR" />
		<result column="PatientID" property="patientid" jdbcType="CHAR" />
		<result column="BillCode" property="billcode" jdbcType="CHAR" />
		<result column="PrepaidType" property="prepaidtype" jdbcType="INTEGER" />
		<result column="PayType" property="paytype" jdbcType="INTEGER" />
		<result column="PrepaidMoney" property="prepaidmoney" jdbcType="DECIMAL" />
		<result column="PrepaidDate" property="prepaiddate" jdbcType="TIMESTAMP" />

		<association column="HosCode" property="hoscode"
			select="com.his.dao.hospital.HosRegisterDao.selectByPrimaryKey" />
		<association column="EmpID" property="employee"
			select="com.his.dao.baseinfo.EmployeeDao.selectPartByPrimaryKey" />
	</resultMap>

	<sql id="Base_Column_List">
		SerialID, HosCode, PatientID, BillCode, PrepaidType,
		PayType, PrepaidMoney,
		PrepaidDate,
		EmpID
	</sql>

	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.String">
		select
		<include refid="Base_Column_List" />
		from PrepaidRecord
		where SerialID = #{serialid,jdbcType=CHAR}
	</select>

	<select id="selectByMap" parameterType="Map" resultMap="BaseResultMap">
		select * from PrepaidRecord
		<where>
			<if test="serialid !=null and serialid !=''">
				and SerialID = #{serialid}
			</if>
			<if test="hoscode !=null and hoscode !=''">
				and HosCode = #{hoscode}
			</if>
			<if test="patientid !=null and patentid !=''">
				and PatientID = #{patientid}
			</if>
			<if test="billcode !=null and billcode !=''">
				and BillCode = #{billcode}
			</if>
		</where>
	</select>

	<delete id="deleteByPrimaryKey" parameterType="java.lang.String">
		delete from
		PrepaidRecord
		where SerialID = #{serialid,jdbcType=CHAR}
	</delete>

	<delete id="deleteByMap" parameterType="Map">
		delete from PrepaidRecord
		<where>
			<if test="serialid !=null and serialid !=''">
				and SerialID = #{serialid}
			</if>
			<if test="hoscode !=null and hoscode !=''">
				and HosCode = #{hoscode}
			</if>
			<if test="patientid !=null and patentid !=''">
				and PatientID = #{patientid}
			</if>
			<if test="billcode !=null and billcode !=''">
				and BillCode = #{billcode}
			</if>
		</where>
	</delete>

	<insert id="insertSelective" parameterType="com.his.entity.hospital.PrepaidRecord">
		insert into PrepaidRecord
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="serialid != null">
				SerialID,
			</if>
			<if test="hoscode != null">
				HosCode,
			</if>
			<if test="patientid != null">
				PatientID,
			</if>
			<if test="billcode != null">
				BillCode,
			</if>
			<if test="prepaidtype != null">
				PrepaidType,
			</if>
			<if test="paytype != null">
				PayType,
			</if>
			<if test="prepaidmoney != null">
				PrepaidMoney,
			</if>
			<if test="prepaiddate != null">
				PrepaidDate,
			</if>
			<if test="employee != null">
				EmpID,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="serialid != null">
				#{serialid,jdbcType=CHAR},
			</if>
			<if test="hoscode != null">
				#{hoscode.hoscode,jdbcType=CHAR},
			</if>
			<if test="patientid != null">
				#{patientid,jdbcType=CHAR},
			</if>
			<if test="billcode != null">
				#{billcode,jdbcType=CHAR},
			</if>
			<if test="prepaidtype != null">
				#{prepaidtype,jdbcType=INTEGER},
			</if>
			<if test="paytype != null">
				#{paytype,jdbcType=INTEGER},
			</if>
			<if test="prepaidmoney != null">
				#{prepaidmoney,jdbcType=DECIMAL},
			</if>
			<if test="prepaiddate != null">
				#{prepaiddate,jdbcType=TIMESTAMP},
			</if>
			<if test="employee != null">
				#{employee.empid,jdbcType=CHAR},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="com.his.entity.hospital.PrepaidRecord">
		update PrepaidRecord
		<set>
			<if test="hoscode != null">
				HosCode = #{hoscode.hoscode,jdbcType=CHAR},
			</if>
			<if test="patientid != null">
				PatientID = #{patientid,jdbcType=CHAR},
			</if>
			<if test="billcode != null">
				BillCode = #{billcode,jdbcType=CHAR},
			</if>
			<if test="prepaidtype != null">
				PrepaidType = #{prepaidtype,jdbcType=INTEGER},
			</if>
			<if test="paytype != null">
				PayType = #{paytype,jdbcType=INTEGER},
			</if>
			<if test="prepaidmoney != null">
				PrepaidMoney = #{prepaidmoney,jdbcType=DECIMAL},
			</if>
			<if test="prepaiddate != null">
				PrepaidDate = #{prepaiddate,jdbcType=TIMESTAMP},
			</if>
			<if test="employee != null">
				EmpID = #{employee.empid,jdbcType=CHAR},
			</if>
		</set>
		where SerialID = #{serialid,jdbcType=CHAR}
	</update>

	<select id="findPrepaidRecord" parameterType="Map" resultMap="BaseResultMap">
		select * from PrepaidRecord
		<where>
			<if test="serialid !=null and serialid !=''">
				and SerialID = #{serialid}
			</if>
			<if test="hoscode !=null and hoscode !=''">
				and HosCode = #{hoscode}
			</if>
			<if test="patientid !=null and patentid !=''">
				and PatientID = #{patientid}
			</if>
			<if test="billcode !=null and billcode !=''">
				and BillCode = #{billcode}
			</if>
		</where>
		<if test="start!=null and size!=null">
			order by SerialID offset ${start} rows fetch next
			${size}
			rows only
		</if>
	</select>

	<select id="getTotalPrepaidRecord" parameterType="Map"
		resultType="Long">
		select count(*) from PrepaidRecord
		<where>
			<if test="serialid !=null and serialid !=''">
				and SerialID = #{serialid}
			</if>
			<if test="hoscode !=null and hoscode !=''">
				and HosCode = #{hoscode}
			</if>
			<if test="patientid !=null and patentid !=''">
				and PatientID = #{patientid}
			</if>
			<if test="billcode !=null and billcode !=''">
				and BillCode = #{billcode}
			</if>
		</where>
	</select>

	<select id="getSerialID" parameterType="Map" resultType="String">
		select MAX(SerialID) from PrepaidRecord
		<where>
			<if test="prefix!=null and prefix!='' ">
				and SerialID like #{prefix}
			</if>
		</where>
	</select>
</mapper>