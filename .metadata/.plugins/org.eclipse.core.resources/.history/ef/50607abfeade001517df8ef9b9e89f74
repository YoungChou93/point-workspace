<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.his.dao.outdoctor.ArchiveOtherCostDao">
	<resultMap id="BaseResultMap" type="com.his.entity.outdoctor.ArchiveOtherCost">
		<id column="SerialID" property="serialid" jdbcType="CHAR" />
		<result column="ICCardID" property="iccardid" jdbcType="VARCHAR" />
		<result column="PatientID" property="patientid" jdbcType="CHAR" />

		<result column="UnitPrice" property="unitprice" jdbcType="DECIMAL" />

		<result column="SumNum" property="sumnum" jdbcType="DECIMAL" />
		<result column="ShouldMoney" property="shouldmoney" jdbcType="DECIMAL" />
		<result column="ActualMoney" property="actualmoney" jdbcType="DECIMAL" />
		<result column="CostState" property="coststate" jdbcType="INTEGER" />
		<result column="InsureType" property="insuretype" jdbcType="INTEGER" />
		<result column="PayType" property="paytype" jdbcType="INTEGER" />
		<result column="ChargeTime" property="chargetime" jdbcType="TIMESTAMP" />
		<result column="InvoiceCode" property="invoicecode" jdbcType="NVARCHAR" />

		<result column="SourceDate" property="sourcedate" jdbcType="TIMESTAMP" />
		<result column="UnUsed1" property="unused1" jdbcType="NVARCHAR" />
		<result column="UnUsed2" property="unused2" jdbcType="NVARCHAR" />
		<result column="UnUsed3" property="unused3" jdbcType="NVARCHAR" />
		<result column="InvoiceState" property="invoicestate" jdbcType="INTEGER" />

		<association column="MarkID" property="outpatientmark"
			select="com.his.dao.outpatientmark.BOutpatientMarkDao.selectByPrimaryKey" />
		<association column="AccountID" property="accountclass"
			select="com.his.dao.baseinfo.AccountClassDao.selectByPrimaryKey" />
		<association column="CheckID" property="checkclass"
			select="com.his.dao.baseinfo.CheckClassDao.selectByPrimaryKey" />
		<association column="MedicalID" property="medicalclass"
			select="com.his.dao.baseinfo.MedicalClassDao.selectByPrimaryKey" />
		<association column="OutpatientID" property="outpatientinvoice"
			select="com.his.dao.baseinfo.OutpatientInvoiceDao.selectByPrimaryKey" />
		<association column="OtherItemCostID" property="otheritemcost"
			select="com.his.dao.baseinfo.OtherItemCostDao.selectByPrimaryKey" />
		<association column="RetailUnit" property="retailunit"
			select="com.his.dao.baseinfo.SystemTypeDao.selectPartByPrimaryKey" />
		<association column="ChargeEmpID" property="chargeemployee"
			select="com.his.dao.baseinfo.EmployeeDao.selectPartByPrimaryKey" />
		<association column="ChargeDeptID" property="chargedepartment"
			select="com.his.dao.baseinfo.DepartmentDao.selectPartByPrimaryKey" />
		<association column="BillCode" property="billcode"
			select="com.his.dao.drugrepo.BillRecDao.selectByPrimaryKey" />
		<association column="SourceEmpID" property="sourceemployee"
			select="com.his.dao.baseinfo.EmployeeDao.selectPartByPrimaryKey" />
		<association column="SourceDeptID" property="soucedepartment"
			select="com.his.dao.baseinfo.DepartmentDao.selectPartByPrimaryKey" />
	</resultMap>
	<sql id="Base_Column_List">
		SerialID, MarkID, ICCardID, PatientID, AccountID, CheckID, MedicalID,
		OutpatientID,
		OtherItemCostID, UnitPrice, RetailUnit, SumNum, ShouldMoney, ActualMoney, CostState,
		InsureType, PayType, ChargeEmpID, ChargeDeptID, ChargeTime,
		InvoiceCode, BillCode,
		SourceDeptID, SourceEmpID, SourceDate, UnUsed1, UnUsed2, UnUsed3,InvoiceState
	</sql>

	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.String">
		select
		<include refid="Base_Column_List" />
		from ArchiveOtherCost
		where SerialID = #{serialid,jdbcType=CHAR}
	</select>

	<select id="selectByMap" parameterType="Map" resultMap="BaseResultMap">
		select * from ArchiveOtherCost
		<where>
			<if test="serialid !=null and serialid !=''">
				and SerialID = #{serialid}
			</if>
			<if test="markid !=null and markid !=''">
				and MarkID = #{markid}
			</if>
		</where>
	</select>

	<delete id="deleteByPrimaryKey" parameterType="java.lang.String">
		delete from ArchiveOtherCost
		where SerialID = #{serialid,jdbcType=CHAR}
	</delete>

	<delete id="deleteByMap" parameterType="Map">
		delete from ArchiveOtherCost
		<where>
			<if test="serialid !=null and serialid !=''">
				and SerialID = #{serialid}
			</if>
		</where>
	</delete>

	<insert id="insertSelective" parameterType="com.his.entity.outdoctor.ArchiveOtherCost">
		insert into ArchiveOtherCost
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="serialid != null">
				SerialID,
			</if>
			<if test="outpatientmark != null">
				MarkID,
			</if>
			<if test="iccardid != null">
				ICCardID,
			</if>
			<if test="patientid != null">
				PatientID,
			</if>
			<if test="accountclass != null">
				AccountID,
			</if>
			<if test="checkclass != null">
				CheckID,
			</if>
			<if test="medicalclass != null">
				MedicalID,
			</if>
			<if test="outpatientinvoice != null">
				OutpatientID,
			</if>
			<if test="otheritemcost != null">
				OtherItemCostID,
			</if>
			<if test="unitprice != null">
				UnitPrice,
			</if>
			<if test="retailunit != null">
				RetailUnit,
			</if>
			<if test="sumnum != null">
				SumNum,
			</if>
			<if test="shouldmoney != null">
				ShouldMoney,
			</if>
			<if test="actualmoney != null">
				ActualMoney,
			</if>
			<if test="coststate != null">
				CostState,
			</if>
			<if test="insuretype != null">
				InsureType,
			</if>
			<if test="paytype != null">
				PayType,
			</if>
			<if test="chargeemployee != null">
				ChargeEmpID,
			</if>
			<if test="chargedepartment != null">
				ChargeDeptID,
			</if>
			<if test="chargetime != null">
				ChargeTime,
			</if>
			<if test="invoicecode != null">
				InvoiceCode,
			</if>
			<if test="billcode != null">
				BillCode,
			</if>
			<if test="soucedepartment != null">
				SourceDeptID,
			</if>
			<if test="sourceemployee != null">
				SourceEmpID,
			</if>
			<if test="sourcedate != null">
				SourceDate,
			</if>
			<if test="unused1 != null">
				UnUsed1,
			</if>
			<if test="unused2 != null">
				UnUsed2,
			</if>
			<if test="unused3 != null">
				UnUsed3,
			</if>
			<if test="invoicestate != null">
				InvoiceState,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="serialid != null">
				#{serialid,jdbcType=CHAR},
			</if>
			<if test="outpatientmark != null">
				#{outpatientmark.markid,jdbcType=CHAR},
			</if>
			<if test="iccardid != null">
				#{iccardid,jdbcType=VARCHAR},
			</if>
			<if test="patientid != null">
				#{patientid,jdbcType=CHAR},
			</if>
			<if test="accountclass != null">
				#{accountclass.accountid,jdbcType=VARCHAR},
			</if>
			<if test="checkclass != null">
				#{checkclass.checkid,jdbcType=VARCHAR},
			</if>
			<if test="medicalclass != null">
				#{medicalclass.medicalid,jdbcType=VARCHAR},
			</if>
			<if test="outpatientinvoice != null">
				#{outpatientinvoice.outpatientid,jdbcType=VARCHAR},
			</if>
			<if test="otheritemcost != null">
				#{otheritemcost.otheritemcostid,jdbcType=CHAR},
			</if>
			<if test="unitprice != null">
				#{unitprice,jdbcType=DECIMAL},
			</if>
			<if test="retailunit != null">
				#{retailunit.typeid,jdbcType=VARCHAR},
			</if>
			<if test="sumnum != null">
				#{sumnum,jdbcType=DECIMAL},
			</if>
			<if test="shouldmoney != null">
				#{shouldmoney,jdbcType=DECIMAL},
			</if>
			<if test="actualmoney != null">
				#{actualmoney,jdbcType=DECIMAL},
			</if>
			<if test="coststate != null">
				#{coststate,jdbcType=INTEGER},
			</if>
			<if test="insuretype != null">
				#{insuretype,jdbcType=INTEGER},
			</if>
			<if test="paytype != null">
				#{paytype,jdbcType=INTEGER},
			</if>
			<if test="chargeemployee != null">
				#{chargeemployee.empid,jdbcType=CHAR},
			</if>
			<if test="chargedepartment != null">
				#{chargedepartment.deptid,jdbcType=CHAR},
			</if>
			<if test="chargetime != null">
				#{chargetime,jdbcType=TIMESTAMP},
			</if>
			<if test="invoicecode != null">
				#{invoicecode,jdbcType=NVARCHAR},
			</if>
			<if test="billcode != null">
				#{billcode.billrecid,jdbcType=CHAR},
			</if>
			<if test="soucedepartment != null">
				#{soucedepartment.deptid,jdbcType=CHAR},
			</if>
			<if test="sourceemployee != null">
				#{sourceemployee.empid,jdbcType=CHAR},
			</if>
			<if test="sourcedate != null">
				#{sourcedate,jdbcType=TIMESTAMP},
			</if>
			<if test="unused1 != null">
				#{unused1,jdbcType=NVARCHAR},
			</if>
			<if test="unused2 != null">
				#{unused2,jdbcType=NVARCHAR},
			</if>
			<if test="unused3 != null">
				#{unused3,jdbcType=NVARCHAR},
			</if>
			<if test="invoicestate != null">
				#{invoicestate,jdbcType=INTEGER},
			</if>
		</trim>
	</insert>

	<update id="updateByPrimaryKeySelective" parameterType="com.his.entity.outdoctor.ArchiveOtherCost">
		update ArchiveOtherCost
		<set>
			<if test="outpatientmark != null">
				MarkID = #{outpatientmark.markid,jdbcType=CHAR},
			</if>
			<if test="iccardid != null">
				ICCardID = #{iccardid,jdbcType=VARCHAR},
			</if>
			<if test="patientid != null">
				PatientID = #{patientid,jdbcType=CHAR},
			</if>
			<if test="accountclass != null">
				AccountID = #{accountclass.accountid,jdbcType=VARCHAR},
			</if>
			<if test="checkclass != null">
				CheckID = #{checkclass.checkid,jdbcType=VARCHAR},
			</if>
			<if test="medicalclass != null">
				MedicalID = #{medicalclass.medicalid,jdbcType=VARCHAR},
			</if>
			<if test="outpatientinvoice != null">
				OutpatientID = #{outpatientinvoice.outpatientid,jdbcType=VARCHAR},
			</if>
			<if test="otheritemcost != null">
				OtherItemCostID = #{otheritemcost.otheritemcostid,jdbcType=CHAR},
			</if>
			<if test="unitprice != null">
				UnitPrice = #{unitprice,jdbcType=DECIMAL},
			</if>
			<if test="retailunit != null">
				RetailUnit = #{retailunit.typeid,jdbcType=VARCHAR},
			</if>
			<if test="sumnum != null">
				SumNum = #{sumnum,jdbcType=DECIMAL},
			</if>
			<if test="shouldmoney != null">
				ShouldMoney = #{shouldmoney,jdbcType=DECIMAL},
			</if>
			<if test="actualmoney != null">
				ActualMoney = #{actualmoney,jdbcType=DECIMAL},
			</if>
			<if test="coststate != null">
				CostState = #{coststate,jdbcType=INTEGER},
			</if>
			<if test="insuretype != null">
				InsureType = #{insuretype,jdbcType=INTEGER},
			</if>
			<if test="paytype != null">
				PayType = #{paytype,jdbcType=INTEGER},
			</if>
			<if test="chargeemployee != null">
				ChargeEmpID = #{chargeemployee.empid,jdbcType=CHAR},
			</if>
			<if test="chargedepartment != null">
				ChargeDeptID = #{chargedepartment.deptid,jdbcType=CHAR},
			</if>
			<if test="chargetime != null">
				ChargeTime = #{chargetime,jdbcType=TIMESTAMP},
			</if>
			<if test="invoicecode != null">
				InvoiceCode = #{invoicecode,jdbcType=NVARCHAR},
			</if>
			<if test="billcode != null">
				BillCode = #{billcode.billrecid,jdbcType=CHAR},
			</if>
			<if test="soucedepartment != null">
				SourceDeptID = #{soucedepartment.deptid,jdbcType=CHAR},
			</if>
			<if test="sourceemployee != null">
				SourceEmpID = #{sourceemployee.empid,jdbcType=CHAR},
			</if>
			<if test="sourcedate != null">
				SourceDate = #{sourcedate,jdbcType=TIMESTAMP},
			</if>
			<if test="unused1 != null">
				UnUsed1 = #{unused1,jdbcType=NVARCHAR},
			</if>
			<if test="unused2 != null">
				UnUsed2 = #{unused2,jdbcType=NVARCHAR},
			</if>
			<if test="unused3 != null">
				UnUsed3 = #{unused3,jdbcType=NVARCHAR},
			</if>
			<if test="invoicestate != null">
				InvoiceState = #{invoicestate,jdbcType=INTEGER},
			</if>
		</set>
		where SerialID = #{serialid,jdbcType=CHAR}
	</update>

	<select id="findArchiveOtherCost" parameterType="Map" resultMap="BaseResultMap">
		select * from ArchiveOtherCost
		<where>
			<if test="serialid !=null and serialid !=''">
				and SerialID = #{serialid}
			</if>
			<if test="iccardid !=null and iccardid !=''">
				and ICCardID=#{iccardid}
			</if>
			<if test="patientid !=null and patientid !=''">
				and PatientID=#{patientid}
			</if>
			<if test="markid !=null and markid !=''">
				and MarkID=#{markid}
			</if>
			<!-- 用于检索需要打印发票的记录 -->
			<if test="invoicestate != null">
				and InvoiceState = ${invoicestate}
			</if>
		</where>
		<if test="start!=null and size!=null">
			order by SerialID offset ${start} rows fetch next ${size}
			rows only
		</if>
	</select>

	<select id="getTotalArchiveOtherCost" parameterType="Map"
		resultType="Long">
		select count(*) from ArchiveOtherCost
		<where>
			<if test="serialid !=null and serialid !=''">
				and SerialID = #{serialid}
			</if>
		</where>
	</select>

	<select id="getMaxID" parameterType="Map" resultType="String">
		select MAX(SerialID) from ArchiveOtherCost
		<where>
			<!-- 日期 -->
			<if test="prefix!=null and prefix!='' ">
				and SerialID like #{prefix}
			</if>
		</where>
	</select>
</mapper>