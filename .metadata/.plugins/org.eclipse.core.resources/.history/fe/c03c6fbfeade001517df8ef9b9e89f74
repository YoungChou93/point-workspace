<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.his.dao.hospital.HosDiagnosisResultDao">
	<resultMap id="BaseResultMap" type="com.his.entity.hospital.HosDiagnosisResult">
		<id column="SerialID" property="serialid" jdbcType="CHAR" />
		<result column="SourceTime" property="sourcetime" jdbcType="TIMESTAMP" />
		<result column="DiagnosisType" property="diagnosistype"
			jdbcType="INTEGER" />

		<association column="HosCode" property="hosregister"
			select="com.his.dao.hospital.HosRegisterDao.selectByPrimaryKey" />
		<association column="SourceEmpID" property="sourceemp"
			select="com.his.dao.baseinfo.EmployeeDao.selectPartByPrimaryKey" />
		<association column="SourceDeptID" property="sourcedept"
			select="com.his.dao.baseinfo.DepartmentDao.selectPartByPrimaryKey" />
		<association column="DiagnosisID" property="icd10"
			select="com.his.dao.baseinfo.ICD10Dao.selectByPrimaryKey" />

	</resultMap>
	<sql id="Base_Column_List">
		SerialID, HosCode, DiagnosisID, SourceEmpID, SourceDeptID, SourceTime,
		DiagnosisType
	</sql>

	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.String">
		select
		<include refid="Base_Column_List" />
		from HosDiagnosisResult
		where SerialID = #{serialid,jdbcType=CHAR}
	</select>

	<select id="selectByMap" parameterType="Map" resultMap="BaseResultMap">
		select * from HosDiagnosisResult
		<where>
			<if test="serialid !=null and serialid !=''">
				and SerialID = #{serialid}
			</if>
		</where>
	</select>

	<delete id="deleteByPrimaryKey" parameterType="java.lang.String">
		delete from HosDiagnosisResult
		where SerialID = #{serialid,jdbcType=CHAR}
	</delete>

	<delete id="deleteByMap" parameterType="Map">
		delete from HosDiagnosisResult
		<where>
			<if test="serialid !=null and serialid !=''">
				and SerialID = #{serialid}
			</if>
		</where>
	</delete>

	<insert id="insertSelective" parameterType="com.his.entity.hospital.HosDiagnosisResult">
		insert into HosDiagnosisResult
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="serialid != null">
				SerialID,
			</if>
			<if test="hosregister != null">
				HosCode,
			</if>
			<if test="icd10 != null">
				DiagnosisID,
			</if>
			<if test="sourceemp != null">
				SourceEmpID,
			</if>
			<if test="sourcedept != null">
				SourceDeptID,
			</if>
			<if test="sourcetime != null">
				SourceTime,
			</if>
			<if test="diagnosistype != null">
				DiagnosisType,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="serialid != null">
				#{serialid,jdbcType=CHAR},
			</if>
			<if test="hosregister != null">
				#{hosregister.hoscode,jdbcType=CHAR},
			</if>
			<if test="icd10 != null">
				#{icd10.id,jdbcType=INTEGER},
			</if>
			<if test="sourceemp != null">
				#{sourceemp.empid,jdbcType=CHAR},
			</if>
			<if test="sourcedept != null">
				#{sourcedept.deptid,jdbcType=CHAR},
			</if>
			<if test="sourcetime != null">
				#{sourcetime,jdbcType=TIMESTAMP},
			</if>
			<if test="diagnosistype != null">
				#{diagnosistype,jdbcType=INTEGER},
			</if>
		</trim>
	</insert>

	<update id="updateByPrimaryKeySelective" parameterType="com.his.entity.hospital.HosDiagnosisResult">
		update HosDiagnosisResult
		<set>
			<if test="hosregister != null">
				HosCode = #{hosregister.hoscode,jdbcType=CHAR},
			</if>
			<if test="icd10 != null">
				DiagnosisID = #{icd10.id,jdbcType=INTEGER},
			</if>
			<if test="sourceemp != null">
				SourceEmpID = #{sourceemp.empid,jdbcType=CHAR},
			</if>
			<if test="sourcedept != null">
				SourceDeptID = #{sourcedept.deptid,jdbcType=CHAR},
			</if>
			<if test="sourcetime != null">
				SourceTime = #{sourcetime,jdbcType=TIMESTAMP},
			</if>
			<if test="diagnosistype != null">
				DiagnosisType = #{diagnosistype,jdbcType=INTEGER},
			</if>
		</set>
		where SerialID = #{serialid,jdbcType=CHAR}
	</update>

	<select id="findHosDiagnosisResult" parameterType="Map"
		resultMap="BaseResultMap">
		select * from HosDiagnosisResult
		<where>
			<if test="serialid !=null and serialid !=''">
				and SerialID = #{serialid}
			</if>
			<if test="hoscode !=null and hoscode !=''">
				and HosCode = #{hoscode}
			</if>
		</where>
		<if test="start!=null and size!=null">
			order by SerialID offset ${start} rows fetch next
			${size}
			rows only
		</if>
	</select>

	<select id="getTotalHosDiagnosisResult" parameterType="Map"
		resultType="Long">
		select count(*) from HosDiagnosisResult
		<where>
			<if test="serialid !=null and serialid !=''">
				and SerialID = #{serialid}
			</if>
			<if test="hoscode !=null and hoscode !=''">
				and HosCode = #{hoscode}
			</if>
		</where>
	</select>

	<select id="getSerialID" parameterType="Map" resultType="String">
		select MAX(SerialID) from HosDiagnosisResult
		<where>
			<if test="prefix!=null and prefix!='' ">
				and SerialID like #{prefix}
			</if>
		</where>
	</select>

</mapper>