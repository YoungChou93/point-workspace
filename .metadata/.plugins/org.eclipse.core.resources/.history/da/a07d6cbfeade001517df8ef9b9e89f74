<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.his.dao.hospital.HosAirPublicCostDao">
	<resultMap id="BaseResultMap" type="com.his.entity.hospital.HosAirPublicCost">
		<id column="ID" property="id" jdbcType="CHAR" />
		<result column="HosCode" property="hoscode" jdbcType="CHAR" />
		<result column="AdviceID" property="adviceid" jdbcType="CHAR" />
		<result column="CostNum" property="costnum" jdbcType="INTEGER" />
		<association column="CostID" property="cost"
			select="com.his.dao.baseinfo.ServiceItemCostDao.selectByPrimaryKey" />
	</resultMap>

	<sql id="Base_Column_List">
		ID, HosCode, AdviceID, CostID, CostNum
	</sql>

	<delete id="deleteByMap" parameterType="Map">
		delete from HosAirPublicCost
		<where>
			<if test="hoscode !=null and hoscode !=''">
				and HosCode = #{hoscode}
			</if>
			<if test="adviceid !=null and adviceid !=''">
				and AdviceID = #{adviceid}
			</if>
		</where>
	</delete>

	<insert id="insertSelective" parameterType="com.his.entity.hospital.HosAirPublicCost">
		insert into HosAirPublicCost
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				ID,
			</if>
			<if test="hoscode != null">
				HosCode,
			</if>
			<if test="adviceid != null">
				AdviceID,
			</if>
			<if test="cost != null">
				CostID,
			</if>
			<if test="costnum != null">
				CostNum,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=CHAR},
			</if>
			<if test="hoscode != null">
				#{hoscode,jdbcType=CHAR},
			</if>
			<if test="adviceid != null">
				#{adviceid,jdbcType=CHAR},
			</if>
			<if test="cost != null">
				#{cost.costid,jdbcType=CHAR},
			</if>
			<if test="costnum != null">
				#{costnum,jdbcType=INTEGER},
			</if>
		</trim>
	</insert>

	<update id="updateByPrimaryKeySelective" parameterType="com.his.entity.hospital.HosAirPublicCost">
		update HosAirPublicCost
		<set>
			<if test="hoscode != null">
				HosCode = #{hoscode,jdbcType=CHAR},
			</if>
			<if test="adviceid != null">
				AdviceID = #{adviceid,jdbcType=CHAR},
			</if>
			<if test="cost != null">
				CostID = #{cost.costid,jdbcType=CHAR},
			</if>
			<if test="costnum != null">
				CostNum = #{costnum,jdbcType=INTEGER},
			</if>
		</set>
		where ID = #{id,jdbcType=CHAR}
	</update>


	<select id="findHosAirPublicCost" parameterType="Map" resultMap="BaseResultMap">
		select * from HosAirPublicCost
		<where>
			<if test="hoscode !=null and hoscode !=''">
				and HosCode = #{hoscode}
			</if>
			<if test="adviceid !=null and adviceid !=''">
				and AdviceID = #{adviceid}
			</if>
		</where>
	</select>
	
	<select id="getTotalHosAirPublicCost" parameterType="Map" resultType="Long">
		select count(*) from HosAirPublicCost
		<where>
			<if test="hoscode !=null and hoscode !=''">
				and HosCode = #{hoscode}
			</if>
			<if test="adviceid !=null and adviceid !=''">
				and AdviceID = #{adviceid}
			</if>
		</where>
	</select>
</mapper>