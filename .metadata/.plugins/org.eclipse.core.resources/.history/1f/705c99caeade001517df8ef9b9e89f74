<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.his.dao.baseinfo.SystemTypeDao" >
  <resultMap id="BaseResultMap" type="com.his.entity.baseinfo.SystemType" >
    <id column="TypeID" property="typeid" jdbcType="VARCHAR" />
    <result column="ParentTypeID" property="parenttypeid" jdbcType="VARCHAR" />
    <result column="TypeName" property="typename" jdbcType="NVARCHAR" />
    <result column="PyCode" property="pycode" jdbcType="VARCHAR" />
    <result column="WbCode" property="wbcode" jdbcType="VARCHAR" />
    <result column="SelfDefCode" property="selfdefcode" jdbcType="VARCHAR" />
    <result column="UnUsed1" property="unused1" jdbcType="NVARCHAR" />
    <result column="UnUsed2" property="unused2" jdbcType="NVARCHAR" />
  </resultMap>
  
  <resultMap id="PartResultMap" type="com.his.entity.baseinfo.SystemTypePart">
    <id column="TypeID" property="typeid" jdbcType="VARCHAR" />
     <result column="TypeName" property="typename" jdbcType="NVARCHAR" />
  </resultMap>
  
  <sql id="Base_Column_List" >
    TypeID, ParentTypeID, TypeName, PyCode, WbCode, SelfDefCode, UnUsed1, UnUsed2
  </sql>
  
   <sql id="Part_Column_List">
    TypeID, TypeName
  </sql>
  
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from SystemType
    where TypeID = #{typeid,jdbcType=VARCHAR}
  </select>
  
  <select id="selectPartByPrimaryKey" parameterType="java.lang.String" resultMap="PartResultMap">
    select 
    <include refid="Part_Column_List" />
    from SystemType
    where TypeID = #{typeid,jdbcType=VARCHAR}
  </select>
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from SystemType
    where TypeID = #{typeid,jdbcType=VARCHAR}
  </delete>
  
  <insert id="insert" parameterType="com.his.entity.baseinfo.SystemType" >
    insert into SystemType (TypeID, ParentTypeID, TypeName, PyCode, WbCode, SelfDefCode, UnUsed1, UnUsed2)
    values (#{typeid,jdbcType=VARCHAR}, #{parenttypeid,jdbcType=VARCHAR}, #{typename,jdbcType=NVARCHAR}, #{pycode,jdbcType=VARCHAR}, 
       #{wbcode,jdbcType=VARCHAR}, #{selfdefcode,jdbcType=VARCHAR}, #{unused1,jdbcType=NVARCHAR},#{unused2,jdbcType=NVARCHAR}
      )
  </insert>
  
  <insert id="insertSelective" parameterType="com.his.entity.baseinfo.SystemType" >
    insert into SystemType
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="typeid != null" >
        TypeID,
      </if>
      <if test="parenttypeid != null" >
        ParentTypeID,
      </if>
      <if test="typename != null" >
        TypeName,
      </if>
      <if test="pycode != null" >
        PyCode,
      </if>
      <if test="wbcode != null" >
        WbCode,
      </if>
      <if test="selfdefcode != null" >
        SelfDefCode,
      </if>
      <if test="unused1 != null" >
        UnUsed1,
      </if>
      <if test="unused2 != null" >
        UnUsed2,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="typeid != null" >
        #{typeid,jdbcType=VARCHAR},
      </if>
      <if test="parenttypeid != null" >
        #{parenttypeid,jdbcType=VARCHAR},
      </if>
      <if test="typename != null" >
        #{typename,jdbcType=NVARCHAR},
      </if>
      <if test="pycode != null" >
        #{pycode,jdbcType=VARCHAR},
      </if>
      <if test="wbcode != null" >
        #{wbcode,jdbcType=VARCHAR},
      </if>
      <if test="selfdefcode != null" >
        #{selfdefcode,jdbcType=VARCHAR},
      </if>
      <if test="unused1 != null" >
        #{unused1,jdbcType=NVARCHAR},
      </if>
      <if test="unused2 != null" >
        #{unused2,jdbcType=NVARCHAR},
      </if>
    </trim>
  </insert>
  
  <update id="updateByPrimaryKeySelective" parameterType="com.his.entity.baseinfo.SystemType" >
    update SystemType
    <set >
      <if test="parenttypeid != null" >
        ParentTypeID = #{parenttypeid,jdbcType=VARCHAR},
      </if>
      <if test="typename != null" >
        TypeName = #{typename,jdbcType=NVARCHAR},
      </if>
      <if test="pycode != null" >
        PyCode = #{pycode,jdbcType=VARCHAR},
      </if>
      <if test="wbcode != null" >
        WbCode = #{wbcode,jdbcType=VARCHAR},
      </if>
      <if test="selfdefcode != null" >
        SelfDefCode = #{selfdefcode,jdbcType=VARCHAR},
      </if>
      <if test="unused1 != null" >
        UnUsed1 = #{unused1,jdbcType=NVARCHAR},
      </if>
      <if test="unused2 != null" >
        UnUsed2 = #{unused2,jdbcType=NVARCHAR},
      </if>
    </set>
    where TypeID = #{typeid,jdbcType=VARCHAR}
  </update>
  
  <update id="updateByPrimaryKey" parameterType="com.his.entity.baseinfo.SystemType" >
    update SystemType
    set ParentTypeID = #{parenttypeid,jdbcType=VARCHAR},
      	TypeName = #{typename,jdbcType=NVARCHAR},
      	PyCode = #{pycode,jdbcType=VARCHAR},
      	WbCode = #{wbcode,jdbcType=VARCHAR},
      	SelfDefCode = #{selfdefcode,jdbcType=VARCHAR},
      UnUsed1 = #{unused1,jdbcType=NVARCHAR},
      UnUsed2 = #{unused2,jdbcType=NVARCHAR}
    where TypeID = #{typeid,jdbcType=VARCHAR}
  </update>
  
	  <select id="findSystemType" parameterType="Map" resultMap="BaseResultMap">
		select * from SystemType
		<where>
			<!-- 按ID查询 -->
			<if test="typeid!=null and typeid!=''">
				and TypeID = #{typeid}
			</if>
			<if test="name!=null and name!='' ">
				and TypeName like #{name}
			</if>
			<if test="pid!=null and pid!='' ">
				and ParentTypeID = #{pid}
			</if>
		</where>
		<if test="start!=null and size!=null">
			order by TypeID offset ${start} rows fetch next ${size} rows only
		</if>
	</select>
	
	<select id="findSystemTypePart" parameterType="Map" resultMap="PartResultMap">
		select * from SystemType
		<where>
			<!-- 按ID查询 -->
			<if test="typeid!=null and typeid!=''">
				and TypeID = #{typeid}
			</if>
			<if test="name!=null and name!='' ">
				and TypeName like #{name}
			</if>
			<if test="pid!=null and pid!='' ">
				and ParentTypeID = #{pid}
			</if>
		</where>
		<if test="start!=null and size!=null">
			order by TypeID offset ${start} rows fetch next ${size} rows only
		</if>
	</select>
	
	<select id="getTotalSystemType" parameterType="Map" resultType="Long">
		select count(*) from SystemType
		<where>
			<!-- 按ID查询 -->
			<if test="typeid!=null and typeid!=''">
				and TypeID = #{typeid}
			</if>
			<if test="name!=null and name!='' ">
				and TypeName like #{name}
			</if>
			<if test="pid!=null and pid!='' ">
				and ParentTypeID = #{pid}
			</if>
		</where>
	</select>
	
	<select id="getMaxSystemTypeID" parameterType="Map"
		resultType="String">
		select MAX(TypeID) from SystemType
			<where>
			<!-- 依照前缀搜索 -->
			<if test="pid!=null and pid!=''">
				and TypeID like #{pid}
			</if>
		</where>
	</select>
</mapper>