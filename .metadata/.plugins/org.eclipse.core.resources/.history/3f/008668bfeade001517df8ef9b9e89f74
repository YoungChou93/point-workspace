<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.his.dao.drugroom.DrugSumStoreDao">
	<resultMap id="BaseResultMap" type="com.his.entity.drugroom.DrugSumStore">
		<id column="SyncMedicineID" property="syncmedicineid" jdbcType="CHAR" />
		<result column="StoreNumber" property="storenumber" jdbcType="DECIMAL" />
		<result column="PassageNumber" property="passagenumber"
			jdbcType="DECIMAL" />

		<association column="DeptID" property="dept"
			select="com.his.dao.baseinfo.DepartmentDao.selectPartByPrimaryKey"></association>
		<association column="MedicineID" property="medicine"
			select="com.his.dao.baseinfo.MedicineBaseInfoDao.selectPartByPrimaryKey"></association>
	</resultMap>

	<sql id="Base_Column_List">
		SyncMedicineID, MedicineID, StoreNumber, PassageNumber, DeptID 
	</sql>

	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.String">
		select
		<include refid="Base_Column_List" />
		from DrugSumStore
		where SyncMedicineID = #{syncmedicineid,jdbcType=CHAR}
	</select>

	<select id="selectByMap" parameterType="Map" resultMap="BaseResultMap">
		select * from DrugSumStore
		<where>
			<if test="syncmedicineid !=null and syncmedicineid !=''">
				and SyncMedicineID = #{syncmedicineid}
			</if>
		</where>
	</select>

	<delete id="deleteByPrimaryKey" parameterType="java.lang.String">
		delete from DrugSumStore
		where SyncMedicineID = #{syncmedicineid,jdbcType=CHAR}
	</delete>

	<delete id="deleteByMap" parameterType="Map">
		delete from DrugSumStore
		<where>
			<if test="syncmedicineid !=null and syncmedicineid !=''">
				and SyncMedicineID = #{syncmedicineid}
			</if>
		</where>
	</delete>

	<insert id="insertSelective" parameterType="com.his.entity.drugroom.DrugSumStore">
		insert into DrugSumStore
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="syncmedicineid != null">
				SyncMedicineID,
			</if>
			<if test="medicine != null">
				MedicineID,
			</if>
			<if test="storenumber != null">
				StoreNumber,
			</if>
			<if test="passagenumber != null">
				PassageNumber,
			</if>
			<if test="dept != null">
				DeptID,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="syncmedicineid != null">
				#{syncmedicineid,jdbcType=CHAR},
			</if>
			<if test="medicine != null">
				#{medicine.medicineid,jdbcType=CHAR},
			</if>
			<if test="storenumber != null">
				#{storenumber,jdbcType=DECIMAL},
			</if>
			<if test="passagenumber != null">
				#{passagenumber,jdbcType=DECIMAL},
			</if>
			<if test="dept != null">
				#{dept.deptid,jdbcType=CHAR},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="com.his.entity.drugroom.DrugSumStore">
		update DrugSumStore
		<set>
			<if test="medicine != null">
				MedicineID = #{medicine.medicineid,jdbcType=CHAR},
			</if>
			<if test="storenumber != null">
				StoreNumber = #{storenumber,jdbcType=DECIMAL},
			</if>
			<if test="passagenumber != null">
				PassageNumber = #{passagenumber,jdbcType=DECIMAL},
			</if>
			<if test="dept != null">
				DeptID = #{dept.deptid,jdbcType=CHAR},
			</if>
		</set>
		where SyncMedicineID = #{syncmedicineid,jdbcType=CHAR}
	</update>

	<select id="findDrugSumStore" parameterType="Map" resultMap="BaseResultMap">
		select * from DrugSumStore
		<where>
			<if test="filter !=null and filter !='' and medicinetype != null">
				and MedicineID in ( 
					select MedicineID from MedicineBaseInfo 
					where ( PyCode like #{filter} or WbCode like #{filter} or 
							SelfDefCode like #{filter} or MedicineName like #{filter})
							and MedicineTypeID = ${medicinetype}
				)
			</if>
			<if test="filter !=null and filter !='' ">
				and MedicineID in ( 
					select MedicineID from MedicineBaseInfo 
					where ( PyCode like #{filter} or WbCode like #{filter} or 
							SelfDefCode like #{filter} or MedicineName like #{filter})
				)
			</if>
			<if test=" medicinetype != null">
				and MedicineID in ( 
					select MedicineID from MedicineBaseInfo 
					where MedicineTypeID = ${medicinetype}
				)
			</if>
			<if test="deptid !=null and deptid !=''">
				and DeptID = #{deptid}
			</if>
			<if test="presyncmedicineid !=null and presyncmedicineid !=''">
				and SyncMedicineID like #{presyncmedicineid}
			</if>
		</where>
		<if test="start!=null and size!=null">
			order by SyncMedicineID offset ${start} rows fetch next
			${size} rows only
		</if>
	</select>

	<select id="getTotalDrugSumStore" parameterType="Map"
		resultType="Long">
		select count(*) from DrugSumStore
		<where>
			<if test="filter !=null and filter !='' and medicinetype != null">
				and MedicineID in ( 
					select MedicineID from MedicineBaseInfo 
					where ( PyCode like #{filter} or WbCode like #{filter} or 
							SelfDefCode like #{filter} or MedicineName like #{filter})
							and MedicineTypeID = ${medicinetype}
				)
			</if>
			<if test="filter !=null and filter !='' ">
				and MedicineID in ( 
					select MedicineID from MedicineBaseInfo 
					where ( PyCode like #{filter} or WbCode like #{filter} or 
							SelfDefCode like #{filter} or MedicineName like #{filter})
				)
			</if>
			<if test=" medicinetype != null">
				and MedicineID in ( 
					select MedicineID from MedicineBaseInfo 
					where MedicineTypeID = ${medicinetype}
				)
			</if>
			<if test="deptid !=null and deptid !=''">
				and DeptID = #{deptid}
			</if>
			<if test="presyncmedicineid !=null and presyncmedicineid !=''">
				and SyncMedicineID like #{presyncmedicineid}
			</if>
		</where>
	</select>

	<select id="getMaxID" parameterType="Map" resultType="String">
		select MAX(SyncMedicineID) from DrugSumStore
		<where>
			<if test="prefix !=null and prefix !=''">
				and SyncMedicineID like #{prefix}
			</if>
		</where>
	</select>
</mapper>