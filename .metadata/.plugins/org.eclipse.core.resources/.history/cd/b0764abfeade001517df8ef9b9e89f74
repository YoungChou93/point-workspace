<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.his.dao.invoice.AirInvoiceDao">
	<resultMap id="BaseResultMap" type="com.his.entity.invoice.AirInvoice">
		<id column="SerialID" property="serialid" jdbcType="CHAR" />
		<result column="IsPersonal" property="ispersonal" jdbcType="BIT" />
		<result column="BeginCode" property="begincode" jdbcType="NVARCHAR" />
		<result column="EndCode" property="endcode" jdbcType="NVARCHAR" />
		<result column="CurrCode" property="currcode" jdbcType="NVARCHAR" />

		<association column="EmpID" property="employee"
			select="com.his.dao.baseinfo.EmployeeDao.selectPartByPrimaryKey" />
		<association column="DeptID" property="department"
			select="com.his.dao.baseinfo.DepartmentDao.selectPartByPrimaryKey" />
	</resultMap>

	<sql id="Base_Column_List">
		SerialID, IsPersonal, DeptID, EmpID, BeginCode, EndCode,
		CurrCode
	</sql>

	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.String">
		select
		<include refid="Base_Column_List" />
		from AirInvoice
		where SerialID = #{serialid,jdbcType=CHAR}
	</select>

	<select id="selectByMap" parameterType="Map" resultMap="BaseResultMap">
		select * from AirInvoice
		<where>
			<if test="serialid !=null and serialid !=''">
				and SerialID = #{serialid}
			</if>
			<if test="ispersonal !=null">
				and IsPersonal = #{ispersonal}
			</if>
			<if test="deptid !=null and deptid !=''">
				and DeptID = #{deptid}
			</if>
			<if test="empid !=null and empid !=''">
				and EmpID = #{empid}
			</if>
		</where>
	</select>

	<delete id="deleteByPrimaryKey" parameterType="java.lang.String">
		delete from
		AirInvoice
		where SerialID = #{serialid,jdbcType=CHAR}
	</delete>

	<delete id="deleteByMap" parameterType="Map">
		delete from AirInvoice
		<where>
			<if test="serialid !=null and serialid !=''">
				and SerialID = #{serialid}
			</if>
			<if test="empid !=null and empid !=''">
				and EmpID = #{empid}
			</if>
			<if test="deptid !=null and deptid !=''">
				and DeptID = #{deptid}
			</if>
		</where>
	</delete>

	<insert id="insertSelective" parameterType="com.his.entity.invoice.AirInvoice">
		insert into AirInvoice
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="serialid != null">
				SerialID,
			</if>
			<if test="ispersonal != null">
				IsPersonal,
			</if>
			<if test="department != null">
				DeptID,
			</if>
			<if test="employee != null">
				EmpID,
			</if>
			<if test="begincode != null">
				BeginCode,
			</if>
			<if test="endcode != null">
				EndCode,
			</if>
			<if test="currcode != null">
				CurrCode,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="serialid != null">
				#{serialid,jdbcType=CHAR},
			</if>
			<if test="ispersonal != null">
				#{ispersonal,jdbcType=BIT},
			</if>
			<if test="department != null">
				#{department.deptid,jdbcType=CHAR},
			</if>
			<if test="employee != null">
				#{employee.empid,jdbcType=CHAR},
			</if>
			<if test="begincode != null">
				#{begincode,jdbcType=NVARCHAR},
			</if>
			<if test="endcode != null">
				#{endcode,jdbcType=NVARCHAR},
			</if>
			<if test="currcode != null">
				#{currcode,jdbcType=NVARCHAR},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="com.his.entity.invoice.AirInvoice">
		update AirInvoice
		<set>
			<if test="ispersonal != null">
				IsPersonal = #{ispersonal,jdbcType=BIT},
			</if>
			<if test="department != null">
				DeptID = #{department.deptid,jdbcType=CHAR},
			</if>
			<if test="employee != null">
				EmpID = #{employee.empid,jdbcType=CHAR},
			</if>
			<if test="begincode != null">
				BeginCode = #{begincode,jdbcType=NVARCHAR},
			</if>
			<if test="endcode != null">
				EndCode = #{endcode,jdbcType=NVARCHAR},
			</if>
			<if test="currcode != null">
				CurrCode = #{currcode,jdbcType=NVARCHAR},
			</if>
		</set>
		where SerialID = #{serialid,jdbcType=CHAR}
	</update>

	<select id="findAirInvoice" parameterType="Map" resultMap="BaseResultMap">
		select * from AirInvoice
		<where>
			<if test="serialid !=null and serialid !=''">
				and SerialID = #{serialid}
			</if>
			<if test="empid !=null and empid !=''">
				and EmpID = #{empid}
			</if>
			<if test="deptid !=null and deptid !=''">
				and DeptID = #{deptid}
			</if>
			<if test="empname !=null and empname !=''">
				and EmpID in (select EmpID from Employee where EmpName like #{empname}
				or PyCode like #{empname} or WbCode like #{empname})
			</if>
		</where>
		<if test="start!=null and size!=null">
			order by CheckID offset ${start} rows fetch next ${size}
			rows only
		</if>
	</select>

	<select id="getTotalAirInvoice" parameterType="Map" resultType="Long">
		select count(*) from AirInvoice
		<where>
			<if test="serialid !=null and serialid !=''">
				and SerialID = #{serialid}
			</if>
			<if test="empid !=null and empid !=''">
				and EmpID = #{empid}
			</if>
			<if test="deptid !=null and deptid !=''">
				and DeptID = #{deptid}
			</if>
		</where>
	</select>

	<select id="getSerialID" parameterType="Map" resultType="String">
		select MAX(SerialID) from AirInvoice
		<where>
			<if test="prefix !=null and prefix !=''">
				and SerialID like #{prefix}
			</if>
		</where>
	</select>
</mapper>