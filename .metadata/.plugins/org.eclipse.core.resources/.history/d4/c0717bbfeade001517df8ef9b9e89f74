<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.his.dao.outdoctor.DiagnosisResultDao">
  <resultMap id="BaseResultMap" type="com.his.entity.outdoctor.DiagnosisResult">
    <id column="DiagnosisResultID" jdbcType="CHAR" property="diagnosisresultid" />
    <result column="UnUsed1" jdbcType="NVARCHAR" property="unused1" />
    <result column="UnUsed2" jdbcType="NVARCHAR" property="unused2" />
    
    <association column="DiagnosisID" property="icd10"
			select="com.his.dao.baseinfo.ICD10Dao.selectByPrimaryKey" />
	<association column="MarkID" property="boutpatientmark"
			select="com.his.dao.outpatientmark.BOutpatientMarkDao.selectByPrimaryKey" />
    
  </resultMap>
  <sql id="Base_Column_List">
    DiagnosisResultID, MarkID, DiagnosisID, UnUsed1, UnUsed2
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from DiagnosisResult
    where DiagnosisResultID = #{diagnosisresultid,jdbcType=CHAR}
  </select>
  
   <select id="selectByMap" parameterType="Map" resultMap="BaseResultMap">
		select * from DiagnosisResult
		<where>
			<if test="diagnosisresultid !=null and diagnosisresultid !=''">
				and DiagnosisResultID = #{diagnosisresultid}
			</if>
		</where>
	</select>
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from DiagnosisResult
    where DiagnosisResultID = #{diagnosisresultid,jdbcType=CHAR}
  </delete>
  
  <delete id="deleteByMap" parameterType="Map">
		delete from DiagnosisResult
		<where>
			<if test="diagnosisresultid !=null and diagnosisresultid !=''">
				and DiagnosisResultID = #{diagnosisresultid}
			</if>
		</where>
	</delete>
  
  <insert id="insertSelective" parameterType="com.his.entity.outdoctor.DiagnosisResult">
    insert into DiagnosisResult
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="diagnosisresultid != null">
        DiagnosisResultID,
      </if>
      <if test="boutpatientmark != null">
        MarkID,
      </if>
      <if test="icd10 != null">
        DiagnosisID,
      </if>
      <if test="unused1 != null">
        UnUsed1,
      </if>
      <if test="unused2 != null">
        UnUsed2,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="diagnosisresultid != null">
        #{diagnosisresultid,jdbcType=CHAR},
      </if>
      <if test="boutpatientmark != null">
        #{boutpatientmark.markid,jdbcType=CHAR},
      </if>
      <if test="icd10 != null">
        #{icd10.id,jdbcType=INTEGER},
      </if>
      <if test="unused1 != null">
        #{unused1,jdbcType=NVARCHAR},
      </if>
      <if test="unused2 != null">
        #{unused2,jdbcType=NVARCHAR},
      </if>
    </trim>
  </insert>
  
  <update id="updateByPrimaryKeySelective" parameterType="com.his.entity.outdoctor.DiagnosisResult">
    update DiagnosisResult
    <set>
      <if test="boutpatientmark != null">
        MarkID = #{boutpatientmark.markid,jdbcType=CHAR},
      </if>
      <if test="icd10 != null">
        DiagnosisID = #{icd10.id,jdbcType=INTEGER},
      </if>
      <if test="unused1 != null">
        UnUsed1 = #{unused1,jdbcType=NVARCHAR},
      </if>
      <if test="unused2 != null">
        UnUsed2 = #{unused2,jdbcType=NVARCHAR},
      </if>
    </set>
    where DiagnosisResultID = #{diagnosisresultid,jdbcType=CHAR}
  </update>
  
   <select id="findDiagnosisResult" parameterType="Map" resultMap="BaseResultMap">
		select * from DiagnosisResult
		<where>
			<if test="diagnosisresultid!=null and diagnosisresultid !='' ">
				and DiagnosisResultID like #{diagnosisresultid}
			</if>
		</where>
		<if test="start!=null and size!=null">
			order by DiagnosisResultID offset ${start} rows fetch next ${size} rows only
		</if>
	</select>
  
 <select id="getTotalDiagnosisResult" parameterType="Map"
		resultType="Long">
		select count(*) from DiagnosisResult
		<where>
			<if test="diagnosisresultid !=null and diagnosisresultid !=''">
				and DiagnosisResultID = #{diagnosisresultid}
			</if>
		
		</where>
	</select>
 
 
  <select id="getMaxDiagnosisResultID" parameterType="Map"
		resultType="String">
		select MAX(DiagnosisResultID) from DiagnosisResult
			<where>
			<!-- 依照前缀搜索 -->
			<if test="prefix!=null and prefix!=''">
				and DiagnosisResultID like #{prefix}
			</if>
		</where>
	</select>

  
</mapper>