<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.his.dao.hospital.HosDrugRoomBackDao">
	<resultMap id="BaseResultMap" type="com.his.entity.hospital.HosDrugRoomBack">

		<id column="BackID" property="backid" jdbcType="CHAR" />
		<result column="BackDos" property="backdos" jdbcType="DECIMAL" />
		<result column="RetailUnit" property="retailunit" jdbcType="VARCHAR" />
		<result column="BackPrice" property="backprice" jdbcType="DECIMAL" />
		<result column="BackMoney" property="backmoney" jdbcType="DECIMAL" />
		<result column="ExecuteDate" property="executedate" jdbcType="TIMESTAMP" />
		<result column="BillCode" property="billcode" jdbcType="CHAR" />

		<association column="StoreID" property="drugroomstore"
			select="com.his.dao.drugroom.DrugRoomStoreDao.selectByPrimaryKey" />
		<association column="SourceDept" property="sourcedept"
			select="com.his.dao.baseinfo.DepartmentDao.selectPartByPrimaryKey" />
		<association column="DrugRoomID" property="drugroom"
			select="com.his.dao.baseinfo.DepartmentDao.selectPartByPrimaryKey" />
		<association column="ApplyID" property="apply"
			select="com.his.dao.hospital.HosMedicineReturnApplyDao.selectByPrimaryKey" />
		<association column="ExecuteEmpID" property="executeemp"
			select="com.his.dao.baseinfo.EmployeeDao.selectPartByPrimaryKey" />

	</resultMap>
	<sql id="Base_Column_List">
		BackID, StoreID, BackDos, RetailUnit, BackPrice, BackMoney, SourceDept,
		DrugRoomID,
		ApplyID, ExecuteEmpID, ExecuteDate, BillCode
	</sql>

	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.String">
		select
		<include refid="Base_Column_List" />
		from HosDrugRoomBack
		where BackID = #{backid,jdbcType=CHAR}
	</select>

	<select id="selectByMap" parameterType="Map" resultMap="BaseResultMap">
		select * from HosDrugRoomBack
		<where>
			<if test="backid !=null and backid !=''">
				and BackID = #{backid}
			</if>
		</where>
	</select>

	<delete id="deleteByPrimaryKey" parameterType="java.lang.String">
		delete from HosDrugRoomBack
		where BackID = #{backid,jdbcType=CHAR}
	</delete>

	<delete id="deleteByMap" parameterType="Map">
		delete from HosDrugRoomBack
		<where>
			<if test="backid !=null and backid !=''">
				and BackID = #{backid}
			</if>
		</where>
	</delete>

	<insert id="insertSelective" parameterType="com.his.entity.hospital.HosDrugRoomBack">
		insert into HosDrugRoomBack
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="backid != null">
				BackID,
			</if>
			<if test="drugroomstore != null">
				StoreID,
			</if>
			<if test="backdos != null">
				BackDos,
			</if>
			<if test="retailunit != null">
				RetailUnit,
			</if>
			<if test="backprice != null">
				BackPrice,
			</if>
			<if test="backmoney != null">
				BackMoney,
			</if>
			<if test="sourcedept != null">
				SourceDept,
			</if>
			<if test="drugroom != null">
				DrugRoomID,
			</if>
			<if test="apply != null">
				ApplyID,
			</if>
			<if test="executeemp != null">
				ExecuteEmpID,
			</if>
			<if test="executedate != null">
				ExecuteDate,
			</if>
			<if test="billcode != null">
				BillCode,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="backid != null">
				#{backid,jdbcType=CHAR},
			</if>
			<if test="drugroomstore != null">
				#{drugroomstore.storeid,jdbcType=CHAR},
			</if>
			<if test="backdos != null">
				#{backdos,jdbcType=DECIMAL},
			</if>
			<if test="retailunit != null">
				#{retailunit,jdbcType=VARCHAR},
			</if>
			<if test="backprice != null">
				#{backprice,jdbcType=DECIMAL},
			</if>
			<if test="backmoney != null">
				#{backmoney,jdbcType=DECIMAL},
			</if>
			<if test="sourcedept != null">
				#{sourcedept.deptid,jdbcType=CHAR},
			</if>
			<if test="drugroom != null">
				#{drugroom.deptid,jdbcType=CHAR},
			</if>
			<if test="apply != null">
				#{apply.applyid,jdbcType=CHAR},
			</if>
			<if test="executeemp != null">
				#{executeemp.empid,jdbcType=CHAR},
			</if>
			<if test="executedate != null">
				#{executedate,jdbcType=TIMESTAMP},
			</if>
			<if test="billcode != null">
				#{billcode,jdbcType=CHAR},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="com.his.entity.hospital.HosDrugRoomBack">
		update HosDrugRoomBack
		<set>
			<if test="drugroomstore != null">
				StoreID = #{drugroomstore.storeid,jdbcType=CHAR},
			</if>
			<if test="backdos != null">
				BackDos = #{backdos,jdbcType=DECIMAL},
			</if>
			<if test="retailunit != null">
				RetailUnit = #{retailunit,jdbcType=VARCHAR},
			</if>
			<if test="backprice != null">
				BackPrice = #{backprice,jdbcType=DECIMAL},
			</if>
			<if test="backmoney != null">
				BackMoney = #{backmoney,jdbcType=DECIMAL},
			</if>
			<if test="sourcedept != null">
				SourceDept = #{sourcedept.deptid,jdbcType=CHAR},
			</if>
			<if test="drugroom != null">
				DrugRoomID = #{drugroom.deptid,jdbcType=CHAR},
			</if>
			<if test="apply != null">
				ApplyID = #{apply.applyid,jdbcType=CHAR},
			</if>
			<if test="executeemp != null">
				ExecuteEmpID = #{executeemp.empid,jdbcType=CHAR},
			</if>
			<if test="executedate != null">
				ExecuteDate = #{executedate,jdbcType=TIMESTAMP},
			</if>
			<if test="billcode != null">
				BillCode = #{billcode,jdbcType=CHAR},
			</if>
		</set>
		where BackID = #{backid,jdbcType=CHAR}
	</update>

	<select id="findHosDrugRoomBack" parameterType="Map" resultMap="BaseResultMap">
		select * from HosDrugRoomBack
		<where>
			<if test="backid !=null and backid !=''">
				and BackID = #{backid}
			</if>
		</where>
		<if test="start!=null and size!=null">
			order by BackID offset ${start} rows fetch next
			${size}
			rows only
		</if>
	</select>

	<select id="getTotalHosDrugRoomBack" parameterType="Map"
		resultType="Long">
		select count(*) from HosDrugRoomBack
		<where>
			<if test="backid !=null and backid !=''">
				and BackID = #{backid}
			</if>
		</where>
	</select>

	<select id="getBackID" parameterType="Map" resultType="String">
		select MAX(BackID) from HosDrugRoomBack
		<where>
			<if test="prefix!=null and prefix!='' ">
				and BackID like #{prefix}
			</if>
		</where>
	</select>
</mapper>