<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.his.dao.hospital.HosRegisterDao">
	<resultMap id="BaseResultMap" type="com.his.entity.hospital.HosRegister">
		<id column="HosCode" property="hoscode" jdbcType="CHAR" />
		<result column="PatientType" property="patienttype" jdbcType="INTEGER" />
		<result column="RegDate" property="regdate" jdbcType="TIMESTAMP" />
		<result column="OutDate" property="outdate" jdbcType="TIMESTAMP" />
		<result column="RegState" property="regstate" jdbcType="INTEGER" />
		<result column="RegWay" property="regway" jdbcType="INTEGER" />
		<result column="PatientState" property="patientstate" jdbcType="INTEGER" />
		<result column="HosAccount" property="hosaccount" jdbcType="DECIMAL" />
		<result column="TotalCost" property="totalcost" jdbcType="DECIMAL" />
		<result column="CostRoad" property="costroad" jdbcType="INTEGER" />
		<result column="LockAccount" property="lockaccount" jdbcType="INTEGER" />
		<result column="CostMode" property="costmode" jdbcType="INTEGER" />

		<association column="PatientID" property="patient"
			select="com.his.dao.iccard.APatientInfoDao.selectByPrimaryKey" />
		<association column="MotherID" property="mother"
			select="com.his.dao.iccard.APatientInfoDao.selectByPrimaryKey" />
		<association column="RegEmpID" property="regemp"
			select="com.his.dao.baseinfo.EmployeeDao.selectPartByPrimaryKey" />
		<association column="AdmissionsDocID" property="admissionsdoc"
			select="com.his.dao.baseinfo.EmployeeDao.selectPartByPrimaryKey" />
		<association column="RegDeptID" property="regdept"
			select="com.his.dao.baseinfo.DepartmentDao.selectPartByPrimaryKey" />
		<association column="DiagnoseID" property="diagnose"
			select="com.his.dao.baseinfo.ICD10Dao.selectByPrimaryKey" />
	</resultMap>

	<sql id="Base_Column_List">
		HosCode, PatientID, PatientType, MotherID, RegDate,
		OutDate, RegState,
		RegDeptID,
		RegEmpID, AdmissionsDocID, RegWay,
		DiagnoseID, PatientState, HosAccount,
		TotalCost,
		CostRoad, LockAccount,
		CostMode
	</sql>

	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.String">
		select
		<include refid="Base_Column_List" />
		from HosRegister
		where HosCode = #{hoscode,jdbcType=CHAR}
	</select>

	<select id="selectByMap" parameterType="Map" resultMap="BaseResultMap">
		select * from HosRegister
		<where>
			<!-- <if test="hoscode !=null and hoscode !=''"> and HosCode = #{hoscode} 
				and HosCode not in (select HosCode from HosDeptRegister) </if> -->
			<if test="hoscode !=null and hoscode !=''">
				and HosCode = #{hoscode}
			</if>
			<if test="regstate !=null">
				and RegState = ${regstate}
			</if>
		</where>
	</select>

	<delete id="deleteByPrimaryKey" parameterType="java.lang.String">
		delete from
		HosRegister
		where HosCode = #{hoscode,jdbcType=CHAR}
	</delete>

	<delete id="deleteByMap" parameterType="Map">
		delete from HosRegister
		<where>
			<if test="hoscode !=null and hoscode !=''">
				and HosCode = #{hoscode}
			</if>
			<if test="patientid !=null and patientid !=''">
				and PatientID = #{patientid}
			</if>
		</where>
	</delete>

	<insert id="insertSelective" parameterType="com.his.entity.hospital.HosRegister">
		insert into HosRegister
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="hoscode != null">
				HosCode,
			</if>
			<if test="patient != null">
				PatientID,
			</if>
			<if test="patienttype != null">
				PatientType,
			</if>
			<if test="mother != null">
				MotherID,
			</if>
			<if test="regdate != null">
				RegDate,
			</if>
			<if test="outdate != null">
				OutDate,
			</if>
			<if test="regstate != null">
				RegState,
			</if>
			<if test="regdept != null">
				RegDeptID,
			</if>
			<if test="regemp != null">
				RegEmpID,
			</if>
			<if test="admissionsdoc != null">
				AdmissionsDocID,
			</if>
			<if test="regway != null">
				RegWay,
			</if>
			<if test="diagnose != null">
				DiagnoseID,
			</if>
			<if test="patientstate != null">
				PatientState,
			</if>
			<if test="hosaccount != null">
				HosAccount,
			</if>
			<if test="totalcost != null">
				TotalCost,
			</if>
			<if test="costroad != null">
				CostRoad,
			</if>
			<if test="lockaccount != null">
				LockAccount,
			</if>
			<if test="costmode != null">
				CostMode,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="hoscode != null">
				#{hoscode,jdbcType=CHAR},
			</if>
			<if test="patient != null">
				#{patient.patientid,jdbcType=CHAR},
			</if>
			<if test="patienttype != null">
				#{patienttype,jdbcType=INTEGER},
			</if>
			<if test="mother != null">
				#{motheri.patientid,jdbcType=CHAR},
			</if>
			<if test="regdate != null">
				#{regdate,jdbcType=TIMESTAMP},
			</if>
			<if test="outdate != null">
				#{outdate,jdbcType=TIMESTAMP},
			</if>
			<if test="regstate != null">
				#{regstate,jdbcType=INTEGER},
			</if>
			<if test="regdept != null">
				#{regdept.deptid,jdbcType=CHAR},
			</if>
			<if test="regemp != null">
				#{regemp.empid,jdbcType=CHAR},
			</if>
			<if test="admissionsdoc != null">
				#{admissionsdoc.empid,jdbcType=CHAR},
			</if>
			<if test="regway != null">
				#{regway,jdbcType=INTEGER},
			</if>
			<if test="diagnose != null">
				#{diagnose.id,jdbcType=INTEGER},
			</if>
			<if test="patientstate != null">
				#{patientstate,jdbcType=INTEGER},
			</if>
			<if test="hosaccount != null">
				#{hosaccount,jdbcType=DECIMAL},
			</if>
			<if test="totalcost != null">
				#{totalcost,jdbcType=DECIMAL},
			</if>
			<if test="costroad != null">
				#{costroad,jdbcType=INTEGER},
			</if>
			<if test="lockaccount != null">
				#{lockaccount,jdbcType=INTEGER},
			</if>
			<if test="costmode != null">
				#{costmode,jdbcType=INTEGER},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="com.his.entity.hospital.HosRegister">
		update HosRegister
		<set>
			<if test="patient != null">
				PatientID = #{patient.patientid,jdbcType=CHAR},
			</if>
			<if test="patienttype != null">
				PatientType = #{patienttype,jdbcType=INTEGER},
			</if>
			<if test="mother != null">
				MotherID = #{mother.patientid,jdbcType=CHAR},
			</if>
			<if test="regdate != null">
				RegDate = #{regdate,jdbcType=TIMESTAMP},
			</if>
			<if test="outdate != null">
				OutDate = #{outdate,jdbcType=TIMESTAMP},
			</if>
			<if test="regstate != null">
				RegState = #{regstate,jdbcType=INTEGER},
			</if>
			<if test="regdept != null">
				RegDeptID = #{regdept.deptid,jdbcType=CHAR},
			</if>
			<if test="regemp != null">
				RegEmpID = #{regemp.empid,jdbcType=CHAR},
			</if>
			<if test="admissionsdoc != null">
				AdmissionsDocID = #{admissionsdoc.empid,jdbcType=CHAR},
			</if>
			<if test="regway != null">
				RegWay = #{regway,jdbcType=INTEGER},
			</if>
			<if test="diagnose != null">
				DiagnoseID = #{diagnose.id,jdbcType=INTEGER},
			</if>
			<if test="patientstate != null">
				PatientState = #{patientstate,jdbcType=INTEGER},
			</if>
			<if test="hosaccount != null">
				HosAccount = #{hosaccount,jdbcType=DECIMAL},
			</if>
			<if test="totalcost != null">
				TotalCost = #{totalcost,jdbcType=DECIMAL},
			</if>
			<if test="costroad != null">
				CostRoad = #{costroad,jdbcType=INTEGER},
			</if>
			<if test="lockaccount != null">
				LockAccount = #{lockaccount,jdbcType=INTEGER},
			</if>
			<if test="costmode != null">
				CostMode = #{costmode,jdbcType=INTEGER},
			</if>
		</set>
		where HosCode = #{hoscode,jdbcType=CHAR}
	</update>

	<select id="findHosRegister" parameterType="Map" resultMap="BaseResultMap">
		select * from HosRegister
		<where>
			<if test="hoscode !=null and hoscode !=''">
				and HosCode = #{hoscode}
			</if>
			<if test="regdeptid !=null and regdeptid !=''">
				and RegDeptID = #{regdeptid} and HosCode not in (select
				HosCode from HosDeptRegister)
			</if>
			<if test="deptid !=null and deptid !=''">
				and RegDeptID = #{deptid}
			</if>
			<if test="regstate !=null">
				and RegState = ${regstate}
			</if>
			<if test="lockaccount !=null">
				and LockAccount = ${lockaccount}
			</if>
			<if test="patienttype !=null">
				and PatientType = ${patienttype}
			</if>
			<if test="motherid !=null and motherid !='' ">
				and MotherID = #{motherid}
			</if>
			<if test="name !=null and name !=''">
				and PatientID in(
				select PatientID from APatientInfo
				where
				Name like #{name}
				)
			</if>
		</where>
		<if test="start!=null and size!=null">
			order by HosCode offset ${start} rows fetch next
			${size}
			rows only
		</if>
	</select>

	<select id="getTotalHosRegister" parameterType="Map" resultType="Long">
		select count(*) from HosRegister
		<where>
			<if test="hoscode !=null and hoscode !=''">
				and HosCode like #{hoscode}
			</if>
			<if test="deptid !=null and deptid !=''">
				and RegDeptID = #{deptid}
			</if>
			<if test="regstate !=null">
				and RegState = ${regstate}
			</if>
			<if test="lockaccount !=null">
				and LockAccount = ${lockaccount}
			</if>
			<if test="regdeptid !=null and regdeptid !=''">
				and RegDeptID = #{regdeptid} and HosCode not in (select HosCode from
				HosDeptRegister)
			</if>
			<if test="motherid !=null and motherid !='' ">
				and MotherID = #{motherid}
			</if>			
		</where>
	</select>

	<select id="getMaxCode" parameterType="Map" resultType="String">
		select MAX(HosCode) from HosRegister
		<where>
			<if test="prefix!=null and prefix!='' ">
				and HosCode like #{prefix}
			</if>
		</where>
	</select>

	<!-- patientid == motherid && 是成人 && 未出院 -->
	<select id="getMotherHosReg" parameterType="java.lang.String"
		resultMap="BaseResultMap">
		select * from HosRegister where PatientID =
		#{motherid,jdbcType=CHAR} and PatientType = 0 and RegState = 0
	</select>

</mapper>