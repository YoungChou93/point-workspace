<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.his.dao.baseinfo.TreatmentDao">
  <resultMap id="BaseResultMap" type="com.his.entity.baseinfo.Treatment">
    <id column="TreatmentID" jdbcType="CHAR" property="treatmentid" />
    <result column="TreatmentName" jdbcType="NVARCHAR" property="treatmentname" />
    <result column="Bestate" jdbcType="INTEGER" property="bestate" />
    <result column="PyCode" jdbcType="NVARCHAR" property="pycode" />
    <result column="WbCode" jdbcType="NVARCHAR" property="wbcode" />
    <result column="SelfDefCode" jdbcType="NVARCHAR" property="selfdefcode" />
    <result column="UnUsed1" jdbcType="NVARCHAR" property="unused1" />
    <result column="UnUsed2" jdbcType="NVARCHAR" property="unused2" />
  </resultMap>
  <sql id="Base_Column_List">
    TreatmentID, TreatmentName, Bestate, PyCode, WbCode, SelfDefCode, UnUsed1, UnUsed2
  </sql>
  
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from Treatment
    where TreatmentID = #{treatmentid,jdbcType=CHAR}
  </select>
  
  <select id="selectByMap" parameterType="Map" resultMap="BaseResultMap">
		select * from Treatment
		<where>
			<if test="treatmentid !=null and treatmentid !=''">
				and TreatmentID = #{treatmentid}
			</if>
		</where>
	</select>
	
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from Treatment
    where TreatmentID = #{treatmentid,jdbcType=CHAR}
  </delete>
  
  <delete id="deleteByMap" parameterType="Map">
		delete from Treatment
		<where>
			<if test="treatmentid !=null and treatmentid !=''">
				and TreatmentID = #{treatmentid}
			</if>
		</where>
	</delete>
  
  <insert id="insertSelective" parameterType="com.his.entity.baseinfo.Treatment">
    insert into Treatment
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="treatmentid != null">
        TreatmentID,
      </if>
      <if test="treatmentname != null">
        TreatmentName,
      </if>
      <if test="bestate != null">
        Bestate,
      </if>
      <if test="pycode != null">
        PyCode,
      </if>
      <if test="wbcode != null">
        WbCode,
      </if>
      <if test="selfdefcode != null">
        SelfDefCode,
      </if>
      <if test="unused1 != null">
        UnUsed1,
      </if>
      <if test="unused2 != null">
        UnUsed2,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="treatmentid != null">
        #{treatmentid,jdbcType=CHAR},
      </if>
      <if test="treatmentname != null">
        #{treatmentname,jdbcType=NVARCHAR},
      </if>
      <if test="bestate != null">
        #{bestate,jdbcType=INTEGER},
      </if>
      <if test="pycode != null">
        #{pycode,jdbcType=NVARCHAR},
      </if>
      <if test="wbcode != null">
        #{wbcode,jdbcType=NVARCHAR},
      </if>
      <if test="selfdefcode != null">
        #{selfdefcode,jdbcType=NVARCHAR},
      </if>
      <if test="unused1 != null">
        #{unused1,jdbcType=NVARCHAR},
      </if>
      <if test="unused2 != null">
        #{unused2,jdbcType=NVARCHAR},
      </if>
    </trim>
  </insert>
  
  <update id="updateByPrimaryKeySelective" parameterType="com.his.entity.baseinfo.Treatment">
    update Treatment
    <set>
      <if test="treatmentname != null">
        TreatmentName = #{treatmentname,jdbcType=NVARCHAR},
      </if>
      <if test="bestate != null">
        Bestate = #{bestate,jdbcType=INTEGER},
      </if>
      <if test="pycode != null">
        PyCode = #{pycode,jdbcType=NVARCHAR},
      </if>
      <if test="wbcode != null">
        WbCode = #{wbcode,jdbcType=NVARCHAR},
      </if>
      <if test="selfdefcode != null">
        SelfDefCode = #{selfdefcode,jdbcType=NVARCHAR},
      </if>
      <if test="unused1 != null">
        UnUsed1 = #{unused1,jdbcType=NVARCHAR},
      </if>
      <if test="unused2 != null">
        UnUsed2 = #{unused2,jdbcType=NVARCHAR},
      </if>
    </set>
    where TreatmentID = #{treatmentid,jdbcType=CHAR}
  </update>
  
  <select id="findTreatment" parameterType="Map" resultMap="BaseResultMap">
		select * from Treatment
		<where>
			<if test="treatmentname != null and treatmentname != '' ">
				and (TreatmentName like #{treatmentname} or PyCode like #{treatmentname} or 
					WbCode like #{treatmentname} or SelfDefCode like  #{treatmentname} )
			</if>
		</where>
		<if test="start!=null and size!=null">
			order by TreatmentID offset ${start} rows fetch next ${size} rows only
		</if>
	</select>
  
 <select id="getTotalTreatment" parameterType="Map"
		resultType="Long">
		select count(*) from Treatment
		<where>
			<if test="treatmentid !=null and treatmentid !=''">
				add TreatmentID = #{treatmentid}
			</if>
			<if test="treatmentname !=null and treatmentname !=''">
				and TreatmentName = #{treatmentname}
			</if>
		</where>
	</select>
 
 
  <select id="getMaxTreatmentID" parameterType="Map"
		resultType="String">
		select MAX(TreatmentID) from Treatment
			<where>
			<!-- 依照前缀搜索 -->
			<if test="prefix!=null and prefix!=''">
				and TreatmentID like #{prefix}
			</if>
		</where>
	</select>
  
  
</mapper>