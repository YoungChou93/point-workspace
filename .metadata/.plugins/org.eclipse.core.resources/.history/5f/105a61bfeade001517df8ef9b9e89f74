<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.his.dao.drugrepo.FactoryInfoDao" >
  <resultMap id="BaseResultMap" type="com.his.entity.drugrepo.FactoryInfo" >
    <id column="FactoryID" property="factoryid" jdbcType="CHAR" />
    <result column="FactoryName" property="factoryname" jdbcType="NVARCHAR" />
    <result column="BeState" property="bestate" jdbcType="INTEGER" />
    <result column="Tel" property="tel" jdbcType="VARCHAR" />
    <result column="FactoryAdress" property="factoryadress" jdbcType="NVARCHAR" />
    <result column="PyCode" property="pycode" jdbcType="VARCHAR" />
    <result column="WbCode" property="wbcode" jdbcType="VARCHAR" />
    <result column="SelfDefCode" property="selfdefcode" jdbcType="VARCHAR" />
    <result column="Descripting" property="descripting" jdbcType="NVARCHAR" />
  </resultMap>
  
  <resultMap id="PartResultMap" type="com.his.entity.drugrepo.FactoryPart" >
    <id column="FactoryID" property="factoryid" jdbcType="CHAR" />
    <result column="FactoryName" property="factoryname" jdbcType="NVARCHAR" />
  </resultMap>
  
  <sql id="Base_Column_List" >
    FactoryID, FactoryName, BeState, Tel, FactoryAdress, PyCode, WbCode, SelfDefCode, Descripting 
  </sql>
  
  <sql id="Part_Column_List" >
    FactoryID, FactoryName
  </sql>
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from FactoryInfo
    where FactoryID = #{factoryid,jdbcType=CHAR}
  </delete>
  
  <delete id="deleteByMap" parameterType="Map" >
		delete  from FactoryInfo
		<where>
			<if test="factoryid !=null and factoryid !=''">
				and FactoryID=#{factoryid}
			</if>
		</where>
  </delete>
	
  <insert id="insertSelective" parameterType="com.his.entity.drugrepo.FactoryInfo" >
    insert into FactoryInfo
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="factoryid != null" >
        FactoryID,
      </if>
      <if test="factoryname != null" >
        FactoryName,
      </if>
      <if test="bestate != null" >
        BeState,
      </if>
      <if test="tel != null" >
        Tel,
      </if>
      <if test="factoryadress != null" >
        FactoryAdress,
      </if>
      <if test="pycode != null" >
        PyCode,
      </if>
      <if test="wbcode != null" >
        WbCode,
      </if>
      <if test="selfdefcode != null" >
        SelfDefCode,
      </if>
      <if test="descripting != null" >
        Descripting,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="factoryid != null" >
        #{factoryid,jdbcType=CHAR},
      </if>
      <if test="factoryname != null" >
        #{factoryname,jdbcType=NVARCHAR},
      </if>
      <if test="bestate != null" >
        #{bestate,jdbcType=INTEGER},
      </if>
      <if test="tel != null" >
        #{tel,jdbcType=VARCHAR},
      </if>
      <if test="factoryadress != null" >
        #{factoryadress,jdbcType=NVARCHAR},
      </if>
      <if test="pycode != null" >
        #{pycode,jdbcType=VARCHAR},
      </if>
      <if test="wbcode != null" >
        #{wbcode,jdbcType=VARCHAR},
      </if>
      <if test="selfdefcode != null" >
        #{selfdefcode,jdbcType=VARCHAR},
      </if>
      <if test="descripting != null" >
        #{descripting,jdbcType=NVARCHAR},
      </if>
    </trim>
  </insert>
  
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from FactoryInfo
    where FactoryID = #{factoryid,jdbcType=CHAR}
  </select>
  
  <update id="updateByPrimaryKeySelective" parameterType="com.his.entity.drugrepo.FactoryInfo" >
    update FactoryInfo
    <set >
      <if test="factoryname != null" >
        FactoryName = #{factoryname,jdbcType=NVARCHAR},
      </if>
      <if test="bestate != null" >
        BeState = #{bestate,jdbcType=INTEGER},
      </if>
      <if test="tel != null" >
        Tel = #{tel,jdbcType=VARCHAR},
      </if>
      <if test="factoryadress != null" >
        FactoryAdress = #{factoryadress,jdbcType=NVARCHAR},
      </if>
      <if test="pycode != null" >
        PyCode = #{pycode,jdbcType=VARCHAR},
      </if>
      <if test="wbcode != null" >
        WbCode = #{wbcode,jdbcType=VARCHAR},
      </if>
      <if test="selfdefcode != null" >
        SelfDefCode = #{selfdefcode,jdbcType=VARCHAR},
      </if>
      <if test="descripting != null" >
        Descripting = #{descripting,jdbcType=NVARCHAR},
      </if>
    </set>
    where FactoryID = #{factoryid,jdbcType=CHAR}
  </update>

	<select id="findFactoryInfo" parameterType="Map" resultMap="BaseResultMap">
		select * from FactoryInfo
		<where>
			<if test="factoryid !=null and factoryid !=''">
				and FactoryID = #{factoryid}
			</if>
			<if test="filter !=null and filter !=''">
				and ( PyCode like #{filter} OR WbCode like #{filter} OR
				SelfDefCode like #{filter} OR FactoryName like #{filter} )
			</if>
				
				and BeState != -1 
				
		</where>
		<if test="start!=null and size!=null">
			order by FactoryID DESC offset ${start} rows fetch next
			${size} rows only
		</if>
	</select>

	<select id="getTotalFactoryInfo" parameterType="Map"
		resultType="Long">
		select count(*) from FactoryInfo
		<where>
			<if test="factoryid !=null and factoryid !=''">
				and FactoryID = #{factoryid}
			</if>
			<if test="filter !=null and filter !=''">
				and ( PyCode like #{filter} OR WbCode like #{filter} OR
				SelfDefCode like #{filter} OR FactoryName like #{filter} )
			</if>
			
			and BeState != -1 
			
		</where>
	</select>
	
	<select id="getMaxFactoryInfoID" resultType="String">
		select MAX(FactoryID) from FactoryInfo
	</select>
	
	
	<select id="findFactoryPart" parameterType="Map" resultMap="PartResultMap">
		select <include refid="Part_Column_List" /> from FactoryInfo
		<where>
			<if test="factoryid !=null and factoryid !=''">
				and FactoryID = #{factoryid}
			</if>
					
			and BeState != -1 
			
		</where>
		<if test="start!=null and size!=null">
			order by FactoryID DESC offset ${start} rows fetch next ${size} rows only
		</if>
	</select>

	<select id="getTotalFactoryPart" parameterType="Map"
		resultType="Long">
		select count(*) from FactoryInfo
		<where>
			<if test="factoryid !=null and factoryid !=''">
				and FactoryID = #{factoryid}
			</if>
			
				and BeState != -1 
			
		</where>
	</select>
	
	
  <select id="selectPartByPrimaryKey" resultMap="PartResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Part_Column_List" />
    from FactoryInfo
    where FactoryID = #{factoryid,jdbcType=CHAR}
  </select>	

</mapper>