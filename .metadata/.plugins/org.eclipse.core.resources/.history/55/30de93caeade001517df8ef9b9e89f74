<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.his.dao.baseinfo.ServiceItemCostMapDao">
	<resultMap id="BaseResultMap" type="com.his.entity.baseinfo.ServiceItemCostMap">
		<id column="ID" jdbcType="CHAR" property="id" />
		<id column="IsBasic" jdbcType="BIT" property="isbasic" />
		<association property="serviceitem" column="ServiceItemID"
			select="com.his.dao.baseinfo.ServiceItemDao.selectByPrimaryKey"></association>
		<association property="cost" column="CostID"
			select="com.his.dao.baseinfo.ServiceItemCostDao.selectByPrimaryKey"></association>
	</resultMap>

	<sql id="Base_Column_List">
		ID, IsBasic, ServiceItemID, CostID
	</sql>

	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.String">
		select
		<include refid="Base_Column_List" />
		from ServiceItemCostMap
		where ID = #{id,jdbcType=CHAR}
	</select>

	<delete id="deleteByPrimaryKey" parameterType="java.lang.String">
		delete from ServiceItemCostMap
		where ID = #{id,jdbcType=CHAR}
	</delete>
	
	<delete id="deleteByMap" parameterType="Map">
		delete from ServiceItemCostMap
		where (ServiceItemID = #{serviceitemid,jdbcType=CHAR}) and (CostID = #{costid,jdbcType=CHAR})
	</delete>


	<insert id="insertSelective" parameterType="com.his.entity.baseinfo.ServiceItemCostMap">
		insert into ServiceItemCostMap
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				ID,
			</if>
			<if test="isbasic != null">
				IsBasic,
			</if>
			<if test="serviceitem != null">
				ServiceItemID,
			</if>
			<if test="cost != null">
				CostID,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=CHAR},
			</if>
			<if test="isbasic != null">
				#{isbasic,jdbcType=BIT},
			</if>
			<if test="serviceitem != null">
				#{serviceitem.serviceitemid,jdbcType=CHAR},
			</if>
			<if test="cost != null">
				#{cost.costid,jdbcType=CHAR},
			</if>
		</trim>
	</insert>

	<select id="findServiceItemCostMap" parameterType="Map"
		resultMap="BaseResultMap">
		select * from ServiceItemCostMap
		<where>
			<if test="serviceitemid !=null and serviceitemid !=''">
				and ServiceItemID = #{serviceitemid}
			</if>
			<if test="costid !=null and costid !=''">
				and CostID=#{costid}
			</if>
		</where>
		<if test="start!=null and size!=null">
			order by ID offset ${start} rows fetch next ${size} rows
			only
		</if>
	</select>

	<select id="getTotalServiceItemCostMap" parameterType="Map" resultType="Long">
		select count(*) from ServiceItemCostMap
		<where>
			<if test="serviceitemid !=null and serviceitemid !=''">
				and ServiceItemID = #{serviceitemid}
			</if>
			<if test="costid !=null and costid !=''">
				and CostID=#{costid}
			</if>
		</where>
	</select>
	
	<select id="getMaxID" parameterType="Map" resultType="String">
		select MAX(ID) from ServiceItemCostMap
		<where>
			<if test="prefix!=null and prefix!='' ">
				and ID like #{prefix}
			</if>
		</where>
	</select>
</mapper>