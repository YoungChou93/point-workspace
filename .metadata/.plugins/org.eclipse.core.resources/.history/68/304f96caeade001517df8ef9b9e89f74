<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.his.dao.baseinfo.SickRoomDao">
	<resultMap id="BaseResultMap" type="com.his.entity.baseinfo.SickRoom">
		<id column="RoomID" property="roomid" jdbcType="CHAR" />
		<result column="RoomName" property="roomname" jdbcType="NVARCHAR" />
		<result column="BeState" property="bestate" jdbcType="INTEGER" />
		<result column="Memo" property="memo" jdbcType="NVARCHAR" />
		
		<association property="department" column="DeptID"
			select="com.his.dao.baseinfo.DepartmentDao.selectPartByPrimaryKey"></association>
	</resultMap>

	<sql id="Base_Column_List">
		RoomID, RoomName, DeptID,BeState, Memo
	</sql>

	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.String">
		select
		<include refid="Base_Column_List" />
		from SickRoom
		where RoomID = #{roomid,jdbcType=CHAR}
	</select>

	<delete id="deleteByPrimaryKey" parameterType="java.lang.String">
		delete from
		SickRoom
		where RoomID = #{roomid,jdbcType=CHAR}
	</delete>

	<insert id="insertSelective" parameterType="com.his.entity.baseinfo.SickRoom">
		insert into SickRoom
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="roomid != null">
				RoomID,
			</if>
			<if test="roomname != null">
				RoomName,
			</if>
			<if test="department != null">
				DeptID,
			</if>
			<if test="bestate != null">
				BeState,
			</if>
			<if test="memo != null">
				Memo,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="roomid != null">
				#{roomid,jdbcType=CHAR},
			</if>
			<if test="roomname != null">
				#{roomname,jdbcType=NVARCHAR},
			</if>
			<if test="department != null">
				#{department.deptid,jdbcType=CHAR},
			</if>
			<if test="bestate != null">
				#{bestate,jdbcType=INTEGER},
			</if>
			<if test="memo != null">
				#{memo,jdbcType=NVARCHAR},
			</if>
		</trim>
	</insert>

	<update id="updateByPrimaryKeySelective" parameterType="com.his.entity.baseinfo.SickRoom">
		update SickRoom
		<set>
			<if test="roomname != null">
				RoomName = #{roomname,jdbcType=NVARCHAR},
			</if>
			<if test="department != null">
				DeptID = #{department.deptid,jdbcType=CHAR},
			</if>
			<if test="bestate != null">
				BeState = #{bestate,jdbcType=INTEGER},
			</if>
			<if test="memo != null">
				Memo = #{memo,jdbcType=NVARCHAR},
			</if>
		</set>
		where RoomID = #{roomid,jdbcType=CHAR}
	</update>

	<select id="findSickRoom" parameterType="Map" resultMap="BaseResultMap">
		select * from SickRoom
		<where>
			<!-- 按病房名称搜索 -->
			<if test="filter !=null and filter !='' ">
				and RoomName like #{filter}
			</if>
			<if test="deptid !=null and deptid !='' ">
				and DeptID = #{deptid}
			</if>			
			and BeState != -1
		</where>
		<if test="start!=null and size!=null">
			order by RoomID offset ${start} rows fetch next ${size} rows only
		</if>
	</select>

	<select id="getTotalSickRoom" parameterType="Map" resultType="Long">
		select count(*) from SickRoom
		<where>
			<!-- 按病房名称搜索 -->
			<if test="filter !=null and filter !='' ">
				and RoomName like #{filter}
			</if>
			<if test="deptid !=null and deptid !='' ">
				and DeptID = #{deptid}
			</if>
			and BeState != -1			
		</where>
	</select>
	
	<select id="getMaxSickRoomID" resultType="String">
		select MAX(RoomID) from SickRoom
	</select>
</mapper>